{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.fc6c4d52b93204f0336b.hot-update.js","sources":["webpack:///./views/HeaderMenu.js"],"sourcesContent":["import {Component} from 'react';\r\nimport {\r\n    Menu,\r\n    Container,\r\n    Button,\r\n    Label,\r\n    Loader,\r\n    List,\r\n    Image,\r\n    Icon,\r\n    Dropdown\r\n} from 'semantic-ui-react';\r\nimport Head from 'next/head';\r\nimport web3 from '../ethereum/web3';\r\nimport Constant from '../support/Constant';\r\nimport Config from '../support/Config';\r\nimport appDispatcher from '../core/AppDispatcher';\r\nimport contractManager from '../core/ContractManager';\r\n\r\nclass HeaderMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.account = props.account;\r\n        this.contractManager = props.contractManager;\r\n        console.log(contractManager);\r\n        this.transactionDispatcher = props.transactionDispatcher;\r\n        this.state = {address: \"\", balance: \"\", name: \"\", \r\n            avatarUrl: \"\", isLoading: true, isJoinButtonLoading: false, \r\n            isJoined: false, numPendingTx: 0};\r\n        this.reloadCount = 0;\r\n    }\r\n\r\n    clearAllData = () => {\r\n        window.localStorage.clear();\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.account) {\r\n            this.getAccountInfo();\r\n            appDispatcher.register((payload) => {\r\n                if (payload.action == Constant.EVENT.ACCOUNT_BALANCE_UPDATED) {\r\n                    this.setState({balance: this.account.balance});\r\n                } else if (payload.action == Constant.EVENT.ACCOUNT_INFO_UPDATED) {\r\n                    this.setState({name: payload.profile.name, avatarUrl: payload.profile.avatarUrl, isJoined: payload.profile.isJoined});\r\n                } \r\n            });\r\n            this.transactionDispatcher.register((payload) => {\r\n                if (payload.action == Constant.EVENT.PENDING_TRANSACTION_UPDATED) {\r\n                    this.setState({numPendingTx: payload.numPendingTx});\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getAccountInfo = () => {\r\n        var address = this.account.getAddress();\r\n        if (address) {\r\n            this.setState({address: address, balance: this.account.balance, isLoading: false, isJoined: this.account.isJoined});\r\n        } else {\r\n            if (this.reloadCount == 1) {\r\n                this.setState({isLoading: false});\r\n            } else {\r\n                this.reloadCount++;\r\n                setTimeout(this.getAccountInfo, 800);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleDropdownClicked = (event, data) => {\r\n        if (data.name == 'updateProfile') {\r\n            appDispatcher.dispatch({\r\n                action: Constant.ACTION.OPEN_UPDATE_PROFILE\r\n            });\r\n        } else if (data.name == 'logOutItem') {\r\n            this.clearAllData();\r\n            window.location.reload();\r\n        } else if (data.name == 'settingsItem') {\r\n            appDispatcher.dispatch({\r\n                action: Constant.ACTION.OPEN_SETTINGS_MODAL\r\n            })\r\n        } \r\n         else if (data.name == 'changeEthNetwork') {\r\n            if (data.networkid != Config.ENV.EthNetworkId) {\r\n                Config.ENV.EthNetworkId = data.networkid;\r\n                this.removeNetworkDependentData();\r\n                window.location.reload();\r\n            }\r\n        }\r\n    }\r\n\r\n    removeNetworkDependentData = () => {\r\n        this.account.storageManager.removeNetworkDependentData();\r\n    }\r\n\r\n    handleJoinClicked = () => {\r\n        var publicKeyBuffer = this.account.getPublicKeyBuffer();\r\n        this.contractManager.joinContract(publicKeyBuffer, (resultEvent) => {\r\n            if (resultEvent == Constant.EVENT.ON_REJECTED || resultEvent == Constant.EVENT.ON_ERROR) {\r\n                this.setState({isJoinButtonLoading: false});\r\n            } else if (resultEvent == Constant.EVENT.ON_RECEIPT) {\r\n                window.location.reload();\r\n            }\r\n        });\r\n        this.setState({isJoinButtonLoading: true});\r\n    }\r\n\r\n    handleImportPrivateKeyClicked = () => {\r\n        appDispatcher.dispatch({\r\n            action: Constant.ACTION.OPEN_PRIVATE_KEY_MODAL\r\n        });\r\n    }\r\n\r\n    render() {\r\n        var accountInfo = (<div></div>);\r\n\r\n        if (this.account) {\r\n            if (this.state.isLoading == false) {\r\n                if (this.state.address) {\r\n                    var addressExplorerUrl = Config.ENV.ExplorerUrl + 'address/' + this.state.address;\r\n                    var dropdownTrigger;\r\n\r\n                    if (this.state.avatarUrl) { \r\n                        dropdownTrigger = (\r\n                            <span><Image src={this.state.avatarUrl} avatar/>{ this.state.name ? this.state.name : this.state.address.substr(0,10)}</span>\r\n                        );\r\n                    } else {\r\n                        dropdownTrigger = (\r\n                            <span><Icon name='user' size='large'/>{ this.state.name ? this.state.name : this.state.address.substr(0,10)}</span>\r\n                        );\r\n                    }\r\n\r\n                    var networkItems = [];\r\n                    for (var i=0;i<Config.NETWORK_LIST.length;i++) {\r\n                        networkItems.push(\r\n                            <Dropdown.Item key={'networkItem' + i} networkid={Config.NETWORK_LIST[i].id} name='changeEthNetwork' onClick={this.handleDropdownClicked}>\r\n                                {Config.NETWORK_LIST[i].name}\r\n                            </Dropdown.Item>\r\n                        );\r\n                    }\r\n\r\n                    var memberInfo;\r\n                    if (this.account.isJoined) {\r\n                        memberInfo = (\r\n                            <Dropdown item trigger={dropdownTrigger}>\r\n                                <Dropdown.Menu>\r\n                                    <Dropdown.Item name='updateProfile' onClick={this.handleDropdownClicked}>\r\n                                        <Icon name='write'/>Update profile\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Item name='settingsItem' onClick={this.handleDropdownClicked}>\r\n                                        <Icon name='settings'/>Settings\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Item name='logOutItem' onClick={this.handleDropdownClicked}>\r\n                                        <Icon name='log out'/>Log out\r\n                                    </Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        );\r\n                    } else {\r\n                        memberInfo = (\r\n                            <Button color='orange' onClick={this.handleJoinClicked} \r\n                                loading={this.state.isJoinButtonLoading} \r\n                                disabled={this.state.isJoinButtonLoading}>Join {Constant.APP_NAME}</Button>\r\n                        );\r\n                    }\r\n\r\n                    var pendingTxItem;\r\n                    if (this.state.numPendingTx > 0) {\r\n                        pendingTxItem = (\r\n                            <Label as='a' color='yellow' href={addressExplorerUrl} target='_blank'>\r\n                                <Icon name='spinner' loading/>\r\n                                {this.state.numPendingTx} pending tx\r\n                            </Label>\r\n                        );\r\n                    }\r\n\r\n                    accountInfo = (\r\n                        <Menu.Menu position='right'>\r\n                            <Menu.Item>\r\n                            <Dropdown item text={Config.ENV.NetworkName}>\r\n                                    <Dropdown.Menu>\r\n                                        {networkItems}\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                            </Menu.Item>\r\n                            <Menu.Item>\r\n                                <List>\r\n                                <List.Item>\r\n                                    <a href={addressExplorerUrl} target='_blank'>\r\n                                        {this.state.address}\r\n                                    </a>\r\n                                </List.Item>\r\n                                <List.Item>\r\n                                    Balance: <Label as='a' href={addressExplorerUrl} target='_blank' color='orange'>{parseFloat(web3.utils.fromWei(\"\" +this.state.balance, 'ether')).toFixed(8) + ' ETH' }</Label>\r\n                                    {pendingTxItem}\r\n                                </List.Item>\r\n                                </List>\r\n                            </Menu.Item>\r\n                            <Menu.Item>\r\n                                {memberInfo}\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n                    );\r\n                } else {\r\n                    accountInfo = (\r\n                        <Menu.Menu position='right'>\r\n                            <Menu.Item>\r\n                                <Button onClick={this.handleImportPrivateKeyClicked} color='blue'>Import private key</Button>\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n                    );\r\n                }\r\n            } else {\r\n                accountInfo = (<Loader inverted active />);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Menu fixed='top' color='grey' inverted>\r\n                <Head>\r\n                <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.12/semantic.min.css\"></link>\r\n                </Head>\r\n                <Container>\r\n                <Menu.Item>\r\n                    <a href='/'><Image src='static/images/blockchat.png' height={55} /></a>\r\n                </Menu.Item>\r\n                    {this.account ? accountInfo: (<div></div>)}\r\n                </Container>\r\n            </Menu>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderMenu;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAaA;AACA;AACA;AAfA;AAmCA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/CA;AAiDA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AArEA;AAuEA;AACA;AACA;AAzEA;AA2EA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AArFA;AAuFA;AACA;AADA;AAGA;AACA;AAzlNA;AACA;AAoNA;;;;A","sourceRoot":""}