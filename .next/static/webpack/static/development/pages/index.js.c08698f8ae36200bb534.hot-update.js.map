{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.c08698f8ae36200bb534.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Container,\r\n    List,\r\n    Image,\r\n    Grid,\r\n    Message,\r\n    Rail,\r\n    Sticky,\r\n    Input,\r\n    Segment\r\n} from 'semantic-ui-react';\r\nimport HeaderMenu from '../views/HeaderMenu';\r\nimport web3 from '../ethereum/web3';\r\nimport PrivateKeyModal from '../views/modals/EnterPrivateKeyModal';\r\nimport UpdateProfileModal from '../views/modals/UpdateProfileModal';\r\nimport GuideModal from '../views/modals/GuideModal';\r\nimport Head from 'next/head';\r\nimport AppManager from '../core/AppManager';\r\nimport ContactList from '../views/ContactList';\r\nimport Chat from '../views/Chat';\r\nimport ErrorModal from '../views/modals/ErrorModal';\r\nimport SettingsModal from '../views/modals/SettingsModal';\r\nimport TransactionModal from '../views/modals/TransactionModal';\r\nimport Footer from '../views/Footer';\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { width: 0, height: 0, contactList: [], messages: [], selectedContact: \"\" };\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n        this.app = new AppManager();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.app.initialize();\r\n    }\r\n      \r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n      \r\n    updateWindowDimensions() {\r\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    }\r\n\r\n    render() {\r\n        var account = this.app.account;\r\n        var contractManager = this.app.contractManager;\r\n        var transactionDispatcher = this.app.getTransactionDispatcher();\r\n\r\n        var listHeight = this.state.height - 140;\r\n        return (\r\n            <Container>\r\n                <Head>\r\n                    <title>BlockChat - Decentralized messaging on Ethereum network</title>\r\n                </Head>\r\n\r\n                <UpdateProfileModal account={account} contractManager={contractManager} />\r\n                <PrivateKeyModal account={account} />\r\n                <HeaderMenu account={account} transactionDispatcher={transactionDispatcher}/>\r\n                <GuideModal />\r\n                <ErrorModal />\r\n                <SettingsModal account={account} />\r\n                <TransactionModal dispatcher={transactionDispatcher} />\r\n            <Grid column={2} style={{paddingTop: 100}}>\r\n                <Grid.Row stretched>\r\n                    <Grid.Column width={6} style={{height: listHeight + \"px\", float: 'left'}}>\r\n                        <ContactList height={listHeight} account={account} contractManager={contractManager}/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={10} style={{height: listHeight + \"px\", overflow: 'auto', float: 'left'}}>\r\n                        <Chat height={listHeight} account={account} contractManager={contractManager}/>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            <Footer />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAJA;AAKA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAzDA;AACA;AA2DA;;;;A","sourceRoot":""}