{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { Modal, Header, Button, Icon, Form } from 'semantic-ui-react';\nimport appDispatcher from '../../core/AppDispatcher';\nimport Constant from '../../support/Constant';\n\nclass UpdateProfileModal extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleClose\", e => {\n      e.preventDefault();\n      this.setState({\n        modalOpen: false\n      });\n    });\n\n    _defineProperty(this, \"updateProfileClicked\", e => {\n      e.preventDefault();\n      this.contractManager.updateProfile(this.state.name, this.state.avatarUrl, resultEvent => {\n        if (resultEvent == Constant.EVENT.ON_RECEIPT) {\n          window.location.reload();\n        }\n      });\n      this.setState({\n        modalOpen: false\n      });\n    });\n\n    this.account = props.account;\n    this.contractManager = props.contractManager;\n    this.state = {\n      modalOpen: false,\n      name: this.account.name,\n      avatarUrl: this.account.avatarUrl\n    };\n  }\n\n  componentDidMount() {\n    appDispatcher.register(payload => {\n      if (payload.action == Constant.ACTION.OPEN_UPDATE_PROFILE) {\n        this.setState({\n          modalOpen: true\n        });\n      } else if (payload.action == Constant.EVENT.ACCOUNT_INFO_UPDATED) {\n        this.setState({\n          name: payload.profile.name,\n          avatarUrl: payload.profile.avatarUrl\n        });\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Modal, {\n      open: this.state.modalOpen,\n      onClose: this.handleClose\n    }, __jsx(Header, {\n      icon: \"\",\n      content: \"Update name and avatar\"\n    }), __jsx(Modal.Content, null, __jsx(Form, null, __jsx(Form.Field, null, __jsx(\"label\", null, \"Name\"), __jsx(\"input\", {\n      placeholder: \"Maximum 32 characters\",\n      value: this.state.name,\n      onChange: e => {\n        if (e.target.value.length <= 32) {\n          this.setState({\n            name: e.target.value\n          });\n        }\n      }\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Avatar URL\"), __jsx(\"input\", {\n      placeholder: \"Maximum 32 characters\",\n      value: this.state.avatarUrl,\n      onChange: e => {\n        if (e.target.value.length <= 32) {\n          this.setState({\n            avatarUrl: e.target.value\n          });\n        }\n      }\n    }), __jsx(\"label\", null, \"If your avatar URL is longer than 32 characters, please consider using \", __jsx(\"a\", {\n      href: \"https://goo.gl/\",\n      target: \"_blank\"\n    }, \"Google URL Shortener\"))))), __jsx(Modal.Actions, null, __jsx(Button, {\n      color: \"orange\",\n      onClick: this.updateProfileClicked\n    }, \"Update\"), __jsx(Button, {\n      color: \"grey\",\n      onClick: this.handleClose\n    }, \"Close\")));\n  }\n\n}\n\nexport default UpdateProfileModal;","map":null,"metadata":{},"sourceType":"module"}