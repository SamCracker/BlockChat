{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { Modal, Header, Button, Message } from 'semantic-ui-react';\nimport appDispatcher from '../../core/AppDispatcher';\nimport Constant from '../../support/Constant';\n\nclass ErrorModal extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      modalOpen: false,\n      message: \"\",\n      title: \"\"\n    });\n\n    _defineProperty(this, \"handleClose\", e => {\n      e.preventDefault();\n      this.setState({\n        modalOpen: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    appDispatcher.register(payload => {\n      if (payload.action == Constant.EVENT.ENCOUNTERED_ERROR) {\n        this.setState({\n          modalOpen: true,\n          message: payload.message,\n          title: payload.title\n        });\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Modal, {\n      open: this.state.modalOpen,\n      onClose: this.handleClose,\n      size: \"small\"\n    }, __jsx(Header, {\n      icon: \"\",\n      content: this.state.title ? this.state.title : \"Notice\"\n    }), __jsx(Modal.Content, null, __jsx(Message, {\n      error: true\n    }, this.state.message)), __jsx(Modal.Actions, null, __jsx(Button, {\n      color: \"grey\",\n      onClick: this.handleClose\n    }, \"Close\")));\n  }\n\n}\n\nexport default ErrorModal;","map":null,"metadata":{},"sourceType":"module"}