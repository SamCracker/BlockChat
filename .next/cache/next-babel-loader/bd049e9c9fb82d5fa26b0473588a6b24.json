{"ast":null,"code":"var _jsxFileName = \"D:\\\\BlockChat\\\\BlockChat\\\\views\\\\modals\\\\AddContactModal.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport web3 from '../../ethereum/web3';\nimport { Modal, Input, Message, Button, Icon, Header } from 'semantic-ui-react';\nimport appDispatcher from '../../core/AppDispatcher';\nimport Constant from '../../support/Constant';\n\nclass AddContactModal extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleClose\", e => {\n      e.preventDefault();\n      this.setState({\n        errorMessage: \"\"\n      });\n      this.setState({\n        modalOpen: false\n      });\n    });\n\n    _defineProperty(this, \"handleAddContact\", e => {\n      if (web3.utils.isAddress(this.state.address)) {\n        this.contractManager.addContact(this.state.address);\n        this.setState({\n          errorMessage: \"\",\n          modalOpen: false\n        });\n      } else {\n        this.setState({\n          errorMessage: \"Invalid ethereum address\"\n        });\n      }\n    });\n\n    this.state = {\n      modalOpen: false,\n      errorMessage: \"\",\n      address: \"\"\n    };\n    this.contractManager = props.contractManager;\n  }\n\n  componentDidMount() {\n    appDispatcher.register(payload => {\n      if (payload.action == Constant.ACTION.ADD_CONTACT) {\n        this.setState({\n          modalOpen: true,\n          errorMessage: \"\",\n          isLoading: false,\n          address: \"\"\n        });\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Modal, {\n      open: this.state.modalOpen,\n      onClose: this.handleClose,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(Header, {\n      icon: \"\",\n      content: \"Add contact by address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), __jsx(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(Input, {\n      fluid: true,\n      value: this.state.address,\n      onChange: event => this.setState({\n        address: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), __jsx(Message, {\n      error: true,\n      header: this.state.errorMessage,\n      hidden: this.state.errorMessage == \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), __jsx(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(Button, {\n      color: \"orange\",\n      onClick: this.handleAddContact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, __jsx(Icon, {\n      name: \"checkmark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), \" Add\"), __jsx(Button, {\n      color: \"grey\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(Icon, {\n      name: \"close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), \" Close\")));\n  }\n\n}\n\nexport default AddContactModal;","map":{"version":3,"sources":["D:/BlockChat/BlockChat/views/modals/AddContactModal.js"],"names":["Component","web3","Modal","Input","Message","Button","Icon","Header","appDispatcher","Constant","AddContactModal","constructor","props","e","preventDefault","setState","errorMessage","modalOpen","utils","isAddress","state","address","contractManager","addContact","componentDidMount","register","payload","action","ACTION","ADD_CONTACT","isLoading","render","handleClose","event","target","value","handleAddContact"],"mappings":"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","sourcesContent":["import {Component} from 'react';\r\nimport web3 from '../../ethereum/web3';\r\nimport {\r\n    Modal,\r\n    Input,\r\n    Message,\r\n    Button,\r\n    Icon,\r\n    Header\r\n} from 'semantic-ui-react';\r\nimport appDispatcher from '../../core/AppDispatcher';\r\nimport Constant from '../../support/Constant';\r\n\r\nclass AddContactModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { modalOpen: false, errorMessage: \"\", address: \"\"}\r\n        this.contractManager = props.contractManager;\r\n    }\r\n    \r\n    componentDidMount() {\r\n        appDispatcher.register((payload) => {\r\n            if (payload.action == Constant.ACTION.ADD_CONTACT) {\r\n                this.setState({modalOpen: true, errorMessage: \"\", isLoading: false, address: \"\"});\r\n            }\r\n        })\r\n    }\r\n\r\n    handleClose = (e) => {\r\n        e.preventDefault();\r\n        this.setState({errorMessage: \"\"});\r\n        this.setState({ modalOpen: false })\r\n    };\r\n\r\n    handleAddContact = (e) => {\r\n        if (web3.utils.isAddress(this.state.address)) {\r\n            this.contractManager.addContact(this.state.address);\r\n            this.setState({errorMessage: \"\", modalOpen: false});\r\n        } else {\r\n            this.setState({errorMessage: \"Invalid ethereum address\"});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                open={this.state.modalOpen}\r\n                onClose={this.handleClose}\r\n                size='small'\r\n                >\r\n                <Header icon=\"\" content=\"Add contact by address\" />\r\n                    <Modal.Content>\r\n                        <Input fluid value={this.state.address} onChange={event => this.setState({address: event.target.value})}/>\r\n                        <Message error header={this.state.errorMessage} hidden={this.state.errorMessage == \"\"}/>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                    <Button color='orange' onClick={this.handleAddContact}>\r\n                        <Icon name='checkmark' /> Add\r\n                    </Button>\r\n                    <Button color='grey' onClick={this.handleClose}>\r\n                        <Icon name='close' /> Close\r\n                    </Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddContactModal;"]},"metadata":{},"sourceType":"module"}