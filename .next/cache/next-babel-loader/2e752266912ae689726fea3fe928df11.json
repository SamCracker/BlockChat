{"ast":null,"code":"var _jsxFileName = \"D:\\\\BlockChat\\\\BlockChat\\\\views\\\\HeaderMenu.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { Menu, Container, Button, Label, Loader, List, Image, Icon, Dropdown } from 'semantic-ui-react';\nimport Head from 'next/head';\nimport web3 from '../ethereum/web3';\nimport Constant from '../support/Constant';\nimport Config from '../support/Config';\nimport appDispatcher from '../core/AppDispatcher';\nimport contractManager from '../core/ContractManager';\n\nclass HeaderMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"clearAllData\", () => {\n      window.localStorage.clear();\n    });\n\n    _defineProperty(this, \"getAccountInfo\", () => {\n      var address = this.account.getAddress();\n\n      if (address) {\n        this.setState({\n          address: address,\n          balance: this.account.balance,\n          isLoading: false,\n          isJoined: this.account.isJoined\n        });\n      } else {\n        if (this.reloadCount == 1) {\n          this.setState({\n            isLoading: false\n          });\n        } else {\n          this.reloadCount++;\n          setTimeout(this.getAccountInfo, 800);\n        }\n      }\n    });\n\n    _defineProperty(this, \"handleDropdownClicked\", (event, data) => {\n      if (data.name == 'updateProfile') {\n        appDispatcher.dispatch({\n          action: Constant.ACTION.OPEN_UPDATE_PROFILE\n        });\n      } else if (data.name == 'logOutItem') {\n        this.clearAllData();\n        window.location.reload();\n      } else if (data.name == 'settingsItem') {\n        appDispatcher.dispatch({\n          action: Constant.ACTION.OPEN_SETTINGS_MODAL\n        });\n      } else if (data.name == 'changeEthNetwork') {\n        if (data.networkid != Config.ENV.EthNetworkId) {\n          Config.ENV.EthNetworkId = data.networkid;\n          this.removeNetworkDependentData();\n          window.location.reload();\n        }\n      }\n    });\n\n    _defineProperty(this, \"removeNetworkDependentData\", () => {\n      this.account.storageManager.removeNetworkDependentData();\n    });\n\n    _defineProperty(this, \"handleJoinClicked\", () => {\n      var publicKeyBuffer = this.account.getPublicKeyBuffer();\n      this.contractManager.joinContract(publicKeyBuffer, resultEvent => {\n        if (resultEvent == Constant.EVENT.ON_REJECTED || resultEvent == Constant.EVENT.ON_ERROR) {\n          this.setState({\n            isJoinButtonLoading: false\n          });\n        } else if (resultEvent == Constant.EVENT.ON_RECEIPT) {\n          window.location.reload();\n        }\n      });\n      this.setState({\n        isJoinButtonLoading: true\n      });\n    });\n\n    _defineProperty(this, \"handleImportPrivateKeyClicked\", () => {\n      appDispatcher.dispatch({\n        action: Constant.ACTION.OPEN_PRIVATE_KEY_MODAL\n      });\n    });\n\n    this.account = props.account;\n    this.contractManager = this.contractManager.bind(this); // console.log(contractManager);\n\n    this.transactionDispatcher = props.transactionDispatcher;\n    this.state = {\n      address: \"\",\n      balance: \"\",\n      name: \"\",\n      avatarUrl: \"\",\n      isLoading: true,\n      isJoinButtonLoading: false,\n      isJoined: false,\n      numPendingTx: 0\n    };\n    this.reloadCount = 0;\n  }\n\n  componentDidMount() {\n    if (this.account) {\n      this.getAccountInfo();\n      appDispatcher.register(payload => {\n        if (payload.action == Constant.EVENT.ACCOUNT_BALANCE_UPDATED) {\n          this.setState({\n            balance: this.account.balance\n          });\n        } else if (payload.action == Constant.EVENT.ACCOUNT_INFO_UPDATED) {\n          this.setState({\n            name: payload.profile.name,\n            avatarUrl: payload.profile.avatarUrl,\n            isJoined: payload.profile.isJoined\n          });\n        }\n      });\n      this.transactionDispatcher.register(payload => {\n        if (payload.action == Constant.EVENT.PENDING_TRANSACTION_UPDATED) {\n          this.setState({\n            numPendingTx: payload.numPendingTx\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    var accountInfo = __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    });\n\n    if (this.account) {\n      if (this.state.isLoading == false) {\n        if (this.state.address) {\n          var addressExplorerUrl = Config.ENV.ExplorerUrl + 'address/' + this.state.address;\n          var dropdownTrigger;\n\n          if (this.state.avatarUrl) {\n            dropdownTrigger = __jsx(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124\n              },\n              __self: this\n            }, __jsx(Image, {\n              src: this.state.avatarUrl,\n              avatar: true,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124\n              },\n              __self: this\n            }), this.state.name ? this.state.name : this.state.address.substr(0, 10));\n          } else {\n            dropdownTrigger = __jsx(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 128\n              },\n              __self: this\n            }, __jsx(Icon, {\n              name: \"user\",\n              size: \"large\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 128\n              },\n              __self: this\n            }), this.state.name ? this.state.name : this.state.address.substr(0, 10));\n          }\n\n          var networkItems = [];\n\n          for (var i = 0; i < Config.NETWORK_LIST.length; i++) {\n            networkItems.push(__jsx(Dropdown.Item, {\n              key: 'networkItem' + i,\n              networkid: Config.NETWORK_LIST[i].id,\n              name: \"changeEthNetwork\",\n              onClick: this.handleDropdownClicked,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 135\n              },\n              __self: this\n            }, Config.NETWORK_LIST[i].name));\n          }\n\n          var memberInfo;\n\n          if (this.account.isJoined) {\n            memberInfo = __jsx(Dropdown, {\n              item: true,\n              trigger: dropdownTrigger,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 144\n              },\n              __self: this\n            }, __jsx(Dropdown.Menu, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 145\n              },\n              __self: this\n            }, __jsx(Dropdown.Item, {\n              name: \"updateProfile\",\n              onClick: this.handleDropdownClicked,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 146\n              },\n              __self: this\n            }, __jsx(Icon, {\n              name: \"write\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 147\n              },\n              __self: this\n            }), \"Update profile\"), __jsx(Dropdown.Item, {\n              name: \"settingsItem\",\n              onClick: this.handleDropdownClicked,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 149\n              },\n              __self: this\n            }, __jsx(Icon, {\n              name: \"settings\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 150\n              },\n              __self: this\n            }), \"Settings\"), __jsx(Dropdown.Item, {\n              name: \"logOutItem\",\n              onClick: this.handleDropdownClicked,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 152\n              },\n              __self: this\n            }, __jsx(Icon, {\n              name: \"log out\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 153\n              },\n              __self: this\n            }), \"Log out\")));\n          } else {\n            memberInfo = __jsx(Button, {\n              color: \"orange\",\n              onClick: this.handleJoinClicked,\n              loading: this.state.isJoinButtonLoading,\n              disabled: this.state.isJoinButtonLoading,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 160\n              },\n              __self: this\n            }, \"Join \", Constant.APP_NAME);\n          }\n\n          var pendingTxItem;\n\n          if (this.state.numPendingTx > 0) {\n            pendingTxItem = __jsx(Label, {\n              as: \"a\",\n              color: \"yellow\",\n              href: addressExplorerUrl,\n              target: \"_blank\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 169\n              },\n              __self: this\n            }, __jsx(Icon, {\n              name: \"spinner\",\n              loading: true,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 170\n              },\n              __self: this\n            }), this.state.numPendingTx, \" pending tx\");\n          }\n\n          accountInfo = __jsx(Menu.Menu, {\n            position: \"right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177\n            },\n            __self: this\n          }, __jsx(Menu.Item, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178\n            },\n            __self: this\n          }, __jsx(Dropdown, {\n            item: true,\n            text: Config.ENV.NetworkName,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          }, __jsx(Dropdown.Menu, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180\n            },\n            __self: this\n          }, networkItems))), __jsx(Menu.Item, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185\n            },\n            __self: this\n          }, __jsx(List, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186\n            },\n            __self: this\n          }, __jsx(List.Item, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187\n            },\n            __self: this\n          }, __jsx(\"a\", {\n            href: addressExplorerUrl,\n            target: \"_blank\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188\n            },\n            __self: this\n          }, this.state.address)), __jsx(List.Item, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }, \"Balance: \", __jsx(Label, {\n            as: \"a\",\n            href: addressExplorerUrl,\n            target: \"_blank\",\n            color: \"orange\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193\n            },\n            __self: this\n          }, parseFloat(web3.utils.fromWei(\"\" + this.state.balance, 'ether')).toFixed(8) + ' ETH'), pendingTxItem))), __jsx(Menu.Item, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198\n            },\n            __self: this\n          }, memberInfo));\n        } else {\n          accountInfo = __jsx(Menu.Menu, {\n            position: \"right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205\n            },\n            __self: this\n          }, __jsx(Menu.Item, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206\n            },\n            __self: this\n          }, __jsx(Button, {\n            onClick: this.handleImportPrivateKeyClicked,\n            color: \"blue\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207\n            },\n            __self: this\n          }, \"Import private key\")));\n        }\n      } else {\n        accountInfo = __jsx(Loader, {\n          inverted: true,\n          active: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        });\n      }\n    }\n\n    return __jsx(Menu, {\n      fixed: \"top\",\n      color: \"grey\",\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.12/semantic.min.css\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    })), __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, __jsx(Menu.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, __jsx(Image, {\n      src: \"static/images/blockchat.png\",\n      height: 55,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }))), this.account ? accountInfo : __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default HeaderMenu;","map":{"version":3,"sources":["D:/BlockChat/BlockChat/views/HeaderMenu.js"],"names":["Component","Menu","Container","Button","Label","Loader","List","Image","Icon","Dropdown","Head","web3","Constant","Config","appDispatcher","contractManager","HeaderMenu","constructor","props","window","localStorage","clear","address","account","getAddress","setState","balance","isLoading","isJoined","reloadCount","setTimeout","getAccountInfo","event","data","name","dispatch","action","ACTION","OPEN_UPDATE_PROFILE","clearAllData","location","reload","OPEN_SETTINGS_MODAL","networkid","ENV","EthNetworkId","removeNetworkDependentData","storageManager","publicKeyBuffer","getPublicKeyBuffer","joinContract","resultEvent","EVENT","ON_REJECTED","ON_ERROR","isJoinButtonLoading","ON_RECEIPT","OPEN_PRIVATE_KEY_MODAL","bind","transactionDispatcher","state","avatarUrl","numPendingTx","componentDidMount","register","payload","ACCOUNT_BALANCE_UPDATED","ACCOUNT_INFO_UPDATED","profile","PENDING_TRANSACTION_UPDATED","render","accountInfo","addressExplorerUrl","ExplorerUrl","dropdownTrigger","substr","networkItems","i","NETWORK_LIST","length","push","id","handleDropdownClicked","memberInfo","handleJoinClicked","APP_NAME","pendingTxItem","NetworkName","parseFloat","utils","fromWei","toFixed","handleImportPrivateKeyClicked"],"mappings":"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","sourcesContent":["import {Component} from 'react';\r\nimport {\r\n    Menu,\r\n    Container,\r\n    Button,\r\n    Label,\r\n    Loader,\r\n    List,\r\n    Image,\r\n    Icon,\r\n    Dropdown\r\n} from 'semantic-ui-react';\r\nimport Head from 'next/head';\r\nimport web3 from '../ethereum/web3';\r\nimport Constant from '../support/Constant';\r\nimport Config from '../support/Config';\r\nimport appDispatcher from '../core/AppDispatcher';\r\nimport contractManager from '../core/ContractManager';\r\n\r\nclass HeaderMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.account = props.account;\r\n        this.contractManager = this.contractManager.bind(this);\r\n        // console.log(contractManager);\r\n        this.transactionDispatcher = props.transactionDispatcher;\r\n        this.state = {address: \"\", balance: \"\", name: \"\", \r\n            avatarUrl: \"\", isLoading: true, isJoinButtonLoading: false, \r\n            isJoined: false, numPendingTx: 0};\r\n        this.reloadCount = 0;\r\n    }\r\n\r\n    clearAllData = () => {\r\n        window.localStorage.clear();\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.account) {\r\n            this.getAccountInfo();\r\n            appDispatcher.register((payload) => {\r\n                if (payload.action == Constant.EVENT.ACCOUNT_BALANCE_UPDATED) {\r\n                    this.setState({balance: this.account.balance});\r\n                } else if (payload.action == Constant.EVENT.ACCOUNT_INFO_UPDATED) {\r\n                    this.setState({name: payload.profile.name, avatarUrl: payload.profile.avatarUrl, isJoined: payload.profile.isJoined});\r\n                } \r\n            });\r\n            this.transactionDispatcher.register((payload) => {\r\n                if (payload.action == Constant.EVENT.PENDING_TRANSACTION_UPDATED) {\r\n                    this.setState({numPendingTx: payload.numPendingTx});\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getAccountInfo = () => {\r\n        var address = this.account.getAddress();\r\n        if (address) {\r\n            this.setState({address: address, balance: this.account.balance, isLoading: false, isJoined: this.account.isJoined});\r\n        } else {\r\n            if (this.reloadCount == 1) {\r\n                this.setState({isLoading: false});\r\n            } else {\r\n                this.reloadCount++;\r\n                setTimeout(this.getAccountInfo, 800);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleDropdownClicked = (event, data) => {\r\n        if (data.name == 'updateProfile') {\r\n            appDispatcher.dispatch({\r\n                action: Constant.ACTION.OPEN_UPDATE_PROFILE\r\n            });\r\n        } else if (data.name == 'logOutItem') {\r\n            this.clearAllData();\r\n            window.location.reload();\r\n        } else if (data.name == 'settingsItem') {\r\n            appDispatcher.dispatch({\r\n                action: Constant.ACTION.OPEN_SETTINGS_MODAL\r\n            })\r\n        } \r\n         else if (data.name == 'changeEthNetwork') {\r\n            if (data.networkid != Config.ENV.EthNetworkId) {\r\n                Config.ENV.EthNetworkId = data.networkid;\r\n                this.removeNetworkDependentData();\r\n                window.location.reload();\r\n            }\r\n        }\r\n    }\r\n\r\n    removeNetworkDependentData = () => {\r\n        this.account.storageManager.removeNetworkDependentData();\r\n    }\r\n\r\n    handleJoinClicked = () => {\r\n        var publicKeyBuffer = this.account.getPublicKeyBuffer();\r\n        this.contractManager.joinContract(publicKeyBuffer, (resultEvent) => {\r\n            if (resultEvent == Constant.EVENT.ON_REJECTED || resultEvent == Constant.EVENT.ON_ERROR) {\r\n                this.setState({isJoinButtonLoading: false});\r\n            } else if (resultEvent == Constant.EVENT.ON_RECEIPT) {\r\n                window.location.reload();\r\n            }\r\n        });\r\n        this.setState({isJoinButtonLoading: true});\r\n    }\r\n\r\n    handleImportPrivateKeyClicked = () => {\r\n        appDispatcher.dispatch({\r\n            action: Constant.ACTION.OPEN_PRIVATE_KEY_MODAL\r\n        });\r\n    }\r\n\r\n    render() {\r\n        var accountInfo = (<div></div>);\r\n\r\n        if (this.account) {\r\n            if (this.state.isLoading == false) {\r\n                if (this.state.address) {\r\n                    var addressExplorerUrl = Config.ENV.ExplorerUrl + 'address/' + this.state.address;\r\n                    var dropdownTrigger;\r\n\r\n                    if (this.state.avatarUrl) { \r\n                        dropdownTrigger = (\r\n                            <span><Image src={this.state.avatarUrl} avatar/>{ this.state.name ? this.state.name : this.state.address.substr(0,10)}</span>\r\n                        );\r\n                    } else {\r\n                        dropdownTrigger = (\r\n                            <span><Icon name='user' size='large'/>{ this.state.name ? this.state.name : this.state.address.substr(0,10)}</span>\r\n                        );\r\n                    }\r\n\r\n                    var networkItems = [];\r\n                    for (var i=0;i<Config.NETWORK_LIST.length;i++) {\r\n                        networkItems.push(\r\n                            <Dropdown.Item key={'networkItem' + i} networkid={Config.NETWORK_LIST[i].id} name='changeEthNetwork' onClick={this.handleDropdownClicked}>\r\n                                {Config.NETWORK_LIST[i].name}\r\n                            </Dropdown.Item>\r\n                        );\r\n                    }\r\n\r\n                    var memberInfo;\r\n                    if (this.account.isJoined) {\r\n                        memberInfo = (\r\n                            <Dropdown item trigger={dropdownTrigger}>\r\n                                <Dropdown.Menu>\r\n                                    <Dropdown.Item name='updateProfile' onClick={this.handleDropdownClicked}>\r\n                                        <Icon name='write'/>Update profile\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Item name='settingsItem' onClick={this.handleDropdownClicked}>\r\n                                        <Icon name='settings'/>Settings\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Item name='logOutItem' onClick={this.handleDropdownClicked}>\r\n                                        <Icon name='log out'/>Log out\r\n                                    </Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        );\r\n                    } else {\r\n                        memberInfo = (\r\n                            <Button color='orange' onClick={this.handleJoinClicked} \r\n                                loading={this.state.isJoinButtonLoading} \r\n                                disabled={this.state.isJoinButtonLoading}>Join {Constant.APP_NAME}</Button>\r\n                        );\r\n                    }\r\n\r\n                    var pendingTxItem;\r\n                    if (this.state.numPendingTx > 0) {\r\n                        pendingTxItem = (\r\n                            <Label as='a' color='yellow' href={addressExplorerUrl} target='_blank'>\r\n                                <Icon name='spinner' loading/>\r\n                                {this.state.numPendingTx} pending tx\r\n                            </Label>\r\n                        );\r\n                    }\r\n\r\n                    accountInfo = (\r\n                        <Menu.Menu position='right'>\r\n                            <Menu.Item>\r\n                            <Dropdown item text={Config.ENV.NetworkName}>\r\n                                    <Dropdown.Menu>\r\n                                        {networkItems}\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                            </Menu.Item>\r\n                            <Menu.Item>\r\n                                <List>\r\n                                <List.Item>\r\n                                    <a href={addressExplorerUrl} target='_blank'>\r\n                                        {this.state.address}\r\n                                    </a>\r\n                                </List.Item>\r\n                                <List.Item>\r\n                                    Balance: <Label as='a' href={addressExplorerUrl} target='_blank' color='orange'>{parseFloat(web3.utils.fromWei(\"\" +this.state.balance, 'ether')).toFixed(8) + ' ETH' }</Label>\r\n                                    {pendingTxItem}\r\n                                </List.Item>\r\n                                </List>\r\n                            </Menu.Item>\r\n                            <Menu.Item>\r\n                                {memberInfo}\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n                    );\r\n                } else {\r\n                    accountInfo = (\r\n                        <Menu.Menu position='right'>\r\n                            <Menu.Item>\r\n                                <Button onClick={this.handleImportPrivateKeyClicked} color='blue'>Import private key</Button>\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n                    );\r\n                }\r\n            } else {\r\n                accountInfo = (<Loader inverted active />);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Menu fixed='top' color='grey' inverted>\r\n                <Head>\r\n                <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.12/semantic.min.css\"></link>\r\n                </Head>\r\n                <Container>\r\n                <Menu.Item>\r\n                    <a href='/'><Image src='static/images/blockchat.png' height={55} /></a>\r\n                </Menu.Item>\r\n                    {this.account ? accountInfo: (<div></div>)}\r\n                </Container>\r\n            </Menu>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderMenu;"]},"metadata":{},"sourceType":"module"}