{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport appDispatcher from '../core/AppDispatcher';\nimport Constant from '../support/Constant';\nimport utils from '../support/Utils';\n\nvar LocalStorageManager = /*#__PURE__*/function () {\n  function LocalStorageManager() {\n    var _this = this;\n\n    _classCallCheck(this, LocalStorageManager);\n\n    _defineProperty(this, \"loadLocalContactAddresses\", function () {\n      _this.contactAddresses = []; // A list of Ethereum addresses in the contact list of the current user.\n\n      if (typeof Storage != 'undefined') {\n        var rawContactAddresses = window.localStorage.contactAddresses;\n\n        if (rawContactAddresses != undefined) {\n          _this.contactAddresses = JSON.parse(rawContactAddresses);\n        }\n      }\n    });\n\n    _defineProperty(this, \"loadContactMessages\", function () {\n      if (typeof Storage != 'undefined') {\n        for (var i = 0; i < _this.contactAddresses.length; i++) {\n          var address = _this.contactAddresses[i];\n          var localContact = window.localStorage[address];\n          _this.contacts[address] = JSON.parse(localContact);\n        }\n      }\n    });\n\n    _defineProperty(this, \"addContact\", function (address, relationship) {\n      var data = _this.contacts[address];\n\n      if (data == undefined) {\n        var member = {};\n        member.messages = [];\n        member.relationship = relationship;\n        window.localStorage.setItem(address, _JSON$stringify(member));\n        _this.contacts[address] = member;\n\n        _this.contactAddresses.push(address);\n\n        window.localStorage.setItem('contactAddresses', _JSON$stringify(_this.contactAddresses));\n      }\n    });\n\n    _defineProperty(this, \"updateContact\", function (address, publicKey, name, avatarUrl, relationship) {\n      var data = _this.contacts[address];\n\n      if (data != undefined) {\n        if (data.relationship < relationship) {\n          data.relationship = relationship;\n        }\n\n        if (publicKey) {\n          data.publicKey = publicKey;\n        }\n\n        if (name) {\n          data.name = name;\n        }\n\n        if (avatarUrl) {\n          data.avatarUrl = avatarUrl;\n        }\n\n        window.localStorage.setItem(address, _JSON$stringify(data));\n      }\n    });\n\n    _defineProperty(this, \"addInvitationEvents\", function (events) {\n      for (var i = 0; i < events.length; i++) {\n        _this.addContact(events[i].returnValues[\"from\"], Constant.Relationship.NoRelation);\n      }\n    });\n\n    _defineProperty(this, \"addRequestEvents\", function (events) {\n      for (var i = 0; i < events.length; i++) {\n        _this.addContact(events[i].returnValues[\"to\"], Constant.Relationship.Requested);\n      }\n    });\n\n    _defineProperty(this, \"addMyAcceptContactEvents\", function (events) {\n      for (var i = 0; i < events.length; i++) {\n        _this.updateContact(events[i].returnValues[\"to\"], \"\", \"\", \"\", Constant.Relationship.Connected);\n      }\n    });\n\n    _defineProperty(this, \"addAcceptContactEvents\", function (events) {\n      for (var i = 0; i < events.length; i++) {\n        _this.updateContact(events[i].returnValues[\"from\"], \"\", \"\", \"\", Constant.Relationship.Connected);\n      }\n    });\n\n    _defineProperty(this, \"addMessageFromFriendEvent\", function (event) {\n      var data = event.returnValues;\n      var fromAddress = data.from;\n      var message = {};\n      message.isMine = false;\n      message.message = data.message;\n      message.encryption = utils.hexStringToAsciiString(data.encryption);\n      message.txHash = event.transactionHash;\n\n      _this.contacts[fromAddress].messages.push(message);\n\n      window.localStorage.setItem(fromAddress, _JSON$stringify(_this.contacts[fromAddress]));\n    });\n\n    _defineProperty(this, \"addMyMessageEvent\", function (event) {\n      var data = event.returnValues;\n      var localMessages = _this.contacts[data.to];\n      var noMatchingItem = true;\n\n      for (var i = localMessages.messages.length - 1; i >= 0; i--) {\n        if (event.transactionHash == localMessages.messages[i].txHash) {\n          localMessages.messages[i].status = Constant.SENT_STATUS.SUCCESS;\n          window.localStorage.setItem(data.to, _JSON$stringify(_this.contacts[data.to]));\n          noMatchingItem = false;\n        }\n      }\n\n      if (noMatchingItem) {\n        var message = {};\n        message.isMine = true;\n        message.message = data.message;\n        message.encryption = utils.hexStringToAsciiString(data.encryption);\n        message.txHash = event.transactionHash;\n        localMessages.messages.push(message);\n        window.localStorage.setItem(data.to, _JSON$stringify(_this.contacts[data.to]));\n      }\n    });\n\n    _defineProperty(this, \"addMyLocalMessage\", function (message, to, encryption, txHash) {\n      var message = {\n        message: message,\n        encryption: encryption,\n        txHash: txHash\n      };\n      message.status = Constant.SENT_STATUS.PENDING;\n      message.isMine = true;\n\n      _this.contacts[to].messages.push(message);\n\n      window.localStorage.setItem(to, _JSON$stringify(_this.contacts[to]));\n    });\n\n    _defineProperty(this, \"updateLocalMessage\", function (toAddress, txHash, status) {\n      var localMessages = _this.contacts[toAddress];\n\n      for (var i = localMessages.messages.length - 1; i >= 0; i--) {\n        if (txHash == localMessages.messages[i].txHash) {\n          localMessages.messages[i].status = status;\n          window.localStorage.setItem(toAddress, _JSON$stringify(_this.contacts[toAddress]));\n        }\n      }\n    });\n\n    _defineProperty(this, \"clearMessages\", function (contacts) {\n      window.localStorage.setItem('currentDataBlock', \"0\");\n      window.localStorage.removeItem('contactAddresses');\n\n      for (var i = 0; i < contacts.length; i++) {\n        window.localStorage.removeItem(contacts[i]);\n      }\n    });\n  }\n\n  _createClass(LocalStorageManager, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.contacts = {}; // Map Ethereum addresses with all messages and information belong to an address\n\n      this.loadLocalContactAddresses();\n      this.loadContactMessages();\n      appDispatcher.dispatch({\n        action: Constant.EVENT.CONTACT_LIST_UPDATED\n      });\n    }\n  }, {\n    key: \"storePrivateKeyAndAddress\",\n    value: function storePrivateKeyAndAddress(privateKey, address) {\n      if (typeof Storage !== 'undefined') {\n        window.localStorage.setItem(\"privateKey\", privateKey);\n        window.localStorage.setItem(\"address\", address);\n        window.localStorage.setItem(\"currentDataBlock\", \"0\");\n        window.localStorage.setItem(\"ethNetwork\", \"4\");\n      }\n    }\n  }, {\n    key: \"getPrivateKey\",\n    value: function getPrivateKey() {\n      if (typeof Storage !== 'undefined') {\n        return window.localStorage.privateKey;\n      }\n    }\n  }, {\n    key: \"getAddress\",\n    value: function getAddress() {\n      if (typeof Storage !== 'undefined') {\n        return window.localStorage.address;\n      }\n    }\n  }, {\n    key: \"setBalance\",\n    value: function setBalance(balance) {\n      if (typeof Storage !== 'undefined') {\n        window.localStorage.setItem('balance', balance);\n      }\n    }\n  }, {\n    key: \"getBalance\",\n    value: function getBalance() {\n      if (typeof Storage !== 'undefined' && window.localStorage.balance != undefined) {\n        return window.localStorage.balance;\n      } else {\n        return \"0\";\n      }\n    }\n  }, {\n    key: \"setName\",\n    value: function setName(name) {\n      if (typeof Storage !== 'undefined' && name != \"\") {\n        window.localStorage.setItem('name', name);\n      }\n    }\n  }, {\n    key: \"getName\",\n    value: function getName() {\n      if (typeof Storage !== 'undefined' && window.localStorage.name != undefined) {\n        return window.localStorage.name;\n      } else {\n        return \"\";\n      }\n    }\n  }, {\n    key: \"setAvatarUrl\",\n    value: function setAvatarUrl(avatarUrl) {\n      if (typeof Storage !== 'undefined' && avatarUrl) {\n        window.localStorage.setItem('avatarUrl', avatarUrl);\n      }\n    }\n  }, {\n    key: \"getAvatarUrl\",\n    value: function getAvatarUrl() {\n      if (typeof Storage !== 'undefined' && window.localStorage.avatarUrl != undefined) {\n        return window.localStorage.avatarUrl;\n      } else {\n        return \"\";\n      }\n    }\n  }, {\n    key: \"setJoinedStatus\",\n    value: function setJoinedStatus(isJoined) {\n      if (typeof Storage !== 'undefined') {\n        window.localStorage.setItem('isJoined', isJoined);\n      }\n    }\n  }, {\n    key: \"getJoinedStatus\",\n    value: function getJoinedStatus() {\n      if (typeof Storage !== 'undefined' && window.localStorage.isJoined != undefined) {\n        return window.localStorage.isJoined;\n      } else {\n        return false;\n      }\n    } // Get current block number of contract events' data (message events, invitation events...)\n\n  }, {\n    key: \"getCurrentDataBlock\",\n    value: function getCurrentDataBlock() {\n      return _parseInt(window.localStorage.currentDataBlock);\n    }\n  }, {\n    key: \"setCurrentDataBlock\",\n    value: function setCurrentDataBlock(blockNumber) {\n      window.localStorage.setItem('currentDataBlock', blockNumber);\n    }\n  }, {\n    key: \"setAskForTransactionApproval\",\n    value: function setAskForTransactionApproval(boolValue) {\n      if (typeof Storage !== 'undefined') {\n        window.localStorage.setItem('askForTransactionApproval', boolValue);\n      }\n    }\n  }, {\n    key: \"getAskForTransactionApproval\",\n    value: function getAskForTransactionApproval() {\n      if (typeof Storage !== 'undefined' && window.localStorage.askForTransactionApproval) {\n        return window.localStorage.askForTransactionApproval == \"true\";\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"removeNetworkDependentData\",\n    value: function removeNetworkDependentData() {\n      if (typeof Storage !== 'undefined') {\n        var rawAddresses = window.localStorage.contactAddresses;\n\n        if (rawAddresses != undefined) {\n          var addresses = JSON.parse(rawAddresses);\n\n          for (var i = 0; i < addresses.length; i++) {\n            window.localStorage.removeItem(addresses[i]);\n          }\n\n          window.localStorage.removeItem('contactAddresses');\n        }\n\n        window.localStorage.removeItem('balance');\n        window.localStorage.removeItem('isJoined');\n        window.localStorage.removeItem('name');\n        window.localStorage.removeItem('avatarUrl');\n        window.localStorage.setItem('currentDataBlock', '0');\n      }\n    }\n  }]);\n\n  return LocalStorageManager;\n}();\n\nexport default LocalStorageManager;","map":{"version":3,"sources":["D:/BlockChat/BlockChat/core/LocalStorageManager.js"],"names":["appDispatcher","Constant","utils","LocalStorageManager","contactAddresses","Storage","rawContactAddresses","window","localStorage","undefined","JSON","parse","i","length","address","localContact","contacts","relationship","data","member","messages","setItem","push","publicKey","name","avatarUrl","events","addContact","returnValues","Relationship","NoRelation","Requested","updateContact","Connected","event","fromAddress","from","message","isMine","encryption","hexStringToAsciiString","txHash","transactionHash","localMessages","to","noMatchingItem","status","SENT_STATUS","SUCCESS","PENDING","toAddress","removeItem","loadLocalContactAddresses","loadContactMessages","dispatch","action","EVENT","CONTACT_LIST_UPDATED","privateKey","balance","isJoined","currentDataBlock","blockNumber","boolValue","askForTransactionApproval","rawAddresses","addresses"],"mappings":"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","sourcesContent":["import appDispatcher from '../core/AppDispatcher';\r\nimport Constant from '../support/Constant';\r\nimport utils from '../support/Utils';\r\n\r\nclass LocalStorageManager {\r\n    initialize() {\r\n        this.contacts = {}; // Map Ethereum addresses with all messages and information belong to an address\r\n        this.loadLocalContactAddresses();\r\n        this.loadContactMessages();\r\n        appDispatcher.dispatch({\r\n            action: Constant.EVENT.CONTACT_LIST_UPDATED\r\n        });\r\n    }\r\n\r\n    loadLocalContactAddresses = () => {\r\n        this.contactAddresses = []; // A list of Ethereum addresses in the contact list of the current user.\r\n        if (typeof(Storage) != 'undefined') {\r\n            var rawContactAddresses = window.localStorage.contactAddresses;\r\n            if (rawContactAddresses != undefined) {\r\n                this.contactAddresses = JSON.parse(rawContactAddresses);\r\n            }\r\n        }\r\n    }\r\n\r\n    loadContactMessages = () => {\r\n        if (typeof(Storage) != 'undefined') {\r\n            for (var i=0;i<this.contactAddresses.length;i++) {\r\n                var address = this.contactAddresses[i];\r\n                var localContact = window.localStorage[address];\r\n                this.contacts[address] = JSON.parse(localContact);\r\n            }\r\n        }\r\n    }\r\n\r\n    addContact = (address, relationship) => {\r\n        var data = this.contacts[address];\r\n        if (data == undefined) {\r\n            var member = {};\r\n            member.messages = [];\r\n            member.relationship = relationship;\r\n            window.localStorage.setItem(address, JSON.stringify(member));\r\n            this.contacts[address] = member;\r\n\r\n            this.contactAddresses.push(address);\r\n            window.localStorage.setItem('contactAddresses', JSON.stringify(this.contactAddresses));\r\n        }\r\n    }\r\n\r\n    updateContact = (address, publicKey, name, avatarUrl, relationship) => {\r\n        var data = this.contacts[address];\r\n        if (data != undefined) {\r\n            if (data.relationship < relationship) {\r\n                data.relationship = relationship;\r\n            }\r\n            if (publicKey) {\r\n                data.publicKey = publicKey;\r\n            }\r\n            if (name) {\r\n                data.name = name;\r\n            }\r\n            if (avatarUrl) {\r\n                data.avatarUrl = avatarUrl;\r\n            }\r\n            window.localStorage.setItem(address, JSON.stringify(data));\r\n        }\r\n    }\r\n\r\n    addInvitationEvents = (events) => {\r\n        for (var i=0;i<events.length;i++) {\r\n            this.addContact(events[i].returnValues[\"from\"], Constant.Relationship.NoRelation);\r\n        }\r\n    }\r\n\r\n    addRequestEvents = (events) => {\r\n        for (var i=0;i<events.length;i++) {\r\n            this.addContact(events[i].returnValues[\"to\"], Constant.Relationship.Requested);\r\n        }\r\n    }\r\n\r\n    addMyAcceptContactEvents = (events) => {\r\n        for (var i=0;i<events.length;i++) {\r\n            this.updateContact(events[i].returnValues[\"to\"], \"\", \"\", \"\", Constant.Relationship.Connected);\r\n        }\r\n    }\r\n\r\n    addAcceptContactEvents = (events) => {\r\n        for (var i=0;i<events.length;i++) {\r\n            this.updateContact(events[i].returnValues[\"from\"], \"\", \"\", \"\", Constant.Relationship.Connected);\r\n        }\r\n    }\r\n\r\n    addMessageFromFriendEvent = (event) => {\r\n        var data = event.returnValues;\r\n        var fromAddress = data.from;\r\n        var message = {};\r\n        message.isMine = false;\r\n        message.message = data.message;\r\n        message.encryption = utils.hexStringToAsciiString(data.encryption);\r\n        message.txHash = event.transactionHash;\r\n\r\n        this.contacts[fromAddress].messages.push(message);\r\n\r\n        window.localStorage.setItem(fromAddress, JSON.stringify(this.contacts[fromAddress]));\r\n    }\r\n\r\n    addMyMessageEvent = (event) => {\r\n        var data = event.returnValues;\r\n        var localMessages = this.contacts[data.to];\r\n        \r\n        var noMatchingItem = true;\r\n        for (var i=localMessages.messages.length-1; i>=0;i--) {\r\n            if (event.transactionHash == localMessages.messages[i].txHash) {\r\n                localMessages.messages[i].status = Constant.SENT_STATUS.SUCCESS;\r\n                window.localStorage.setItem(data.to, JSON.stringify(this.contacts[data.to]));\r\n                noMatchingItem = false;\r\n            }\r\n        }\r\n        if (noMatchingItem) {\r\n            var message = {};\r\n            message.isMine = true;\r\n            message.message = data.message;\r\n            message.encryption = utils.hexStringToAsciiString(data.encryption);\r\n            message.txHash = event.transactionHash;\r\n            localMessages.messages.push(message);\r\n            window.localStorage.setItem(data.to, JSON.stringify(this.contacts[data.to]));\r\n        }\r\n    }\r\n\r\n    addMyLocalMessage = (message, to, encryption, txHash) => {\r\n        var message = {message, encryption, txHash};\r\n        message.status = Constant.SENT_STATUS.PENDING;\r\n        message.isMine = true;\r\n        this.contacts[to].messages.push(message);\r\n        window.localStorage.setItem(to, JSON.stringify(this.contacts[to]));\r\n    }\r\n\r\n    updateLocalMessage = (toAddress, txHash, status) => {\r\n        var localMessages = this.contacts[toAddress];\r\n        for (var i=localMessages.messages.length-1; i>=0;i--) {\r\n            if (txHash == localMessages.messages[i].txHash) {\r\n                localMessages.messages[i].status = status;\r\n                window.localStorage.setItem(toAddress, JSON.stringify(this.contacts[toAddress]));\r\n            }\r\n        }\r\n    }\r\n\r\n    storePrivateKeyAndAddress(privateKey, address) {\r\n        if (typeof(Storage) !== 'undefined') {\r\n            window.localStorage.setItem(\"privateKey\", privateKey);\r\n            window.localStorage.setItem(\"address\", address);\r\n            window.localStorage.setItem(\"currentDataBlock\", \"0\");\r\n            window.localStorage.setItem(\"ethNetwork\", \"4\");\r\n        }\r\n    }\r\n\r\n    getPrivateKey() {\r\n        if (typeof(Storage) !== 'undefined') {\r\n            return window.localStorage.privateKey;\r\n        }\r\n    }\r\n\r\n    getAddress() {\r\n        if (typeof(Storage) !== 'undefined') {\r\n            return window.localStorage.address;\r\n        }\r\n    }\r\n\r\n    setBalance(balance) {\r\n        if (typeof(Storage) !== 'undefined') {\r\n            window.localStorage.setItem('balance', balance);\r\n        }\r\n    }\r\n\r\n    getBalance() {\r\n        if (typeof(Storage) !== 'undefined' && window.localStorage.balance != undefined) {\r\n            return window.localStorage.balance;\r\n        } else {\r\n            return \"0\";\r\n        }\r\n    }\r\n\r\n    setName(name) {\r\n        if (typeof(Storage) !== 'undefined' && name != \"\") {\r\n            window.localStorage.setItem('name', name);\r\n        }\r\n    }\r\n\r\n    getName() {\r\n        if (typeof(Storage) !== 'undefined' && window.localStorage.name != undefined) {\r\n            return window.localStorage.name;\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    setAvatarUrl(avatarUrl) {\r\n        if (typeof(Storage) !== 'undefined' && avatarUrl) {\r\n            window.localStorage.setItem('avatarUrl', avatarUrl);\r\n        }\r\n    }\r\n\r\n    getAvatarUrl() {\r\n        if (typeof(Storage) !== 'undefined' && window.localStorage.avatarUrl != undefined) {\r\n            return window.localStorage.avatarUrl;\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    setJoinedStatus(isJoined) {\r\n        if (typeof(Storage) !== 'undefined') {\r\n            window.localStorage.setItem('isJoined', isJoined);\r\n        }\r\n    }\r\n\r\n    getJoinedStatus() {\r\n        if (typeof(Storage) !== 'undefined' && window.localStorage.isJoined != undefined) {\r\n            return window.localStorage.isJoined;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // Get current block number of contract events' data (message events, invitation events...)\r\n    getCurrentDataBlock() {\r\n        return parseInt(window.localStorage.currentDataBlock);\r\n    }\r\n\r\n    setCurrentDataBlock(blockNumber) {\r\n        window.localStorage.setItem('currentDataBlock', blockNumber);\r\n    }\r\n\r\n    setAskForTransactionApproval(boolValue) {\r\n        if (typeof(Storage) !== 'undefined') {\r\n            window.localStorage.setItem('askForTransactionApproval', boolValue);\r\n        }\r\n    }\r\n    \r\n    getAskForTransactionApproval() {\r\n        if (typeof(Storage) !== 'undefined' && window.localStorage.askForTransactionApproval) {\r\n            return (window.localStorage.askForTransactionApproval == \"true\");\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    removeNetworkDependentData() {\r\n        if (typeof(Storage) !== 'undefined') {\r\n            var rawAddresses = window.localStorage.contactAddresses;\r\n            if (rawAddresses != undefined) {\r\n                var addresses = JSON.parse(rawAddresses);\r\n                for (var i=0;i<addresses.length;i++) {\r\n                    window.localStorage.removeItem(addresses[i]);\r\n                }\r\n                window.localStorage.removeItem('contactAddresses');\r\n            }\r\n            window.localStorage.removeItem('balance');\r\n            window.localStorage.removeItem('isJoined');\r\n            window.localStorage.removeItem('name');\r\n            window.localStorage.removeItem('avatarUrl');\r\n            window.localStorage.setItem('currentDataBlock', '0');\r\n        }\r\n    }\r\n\r\n    clearMessages = (contacts) => {\r\n        window.localStorage.setItem('currentDataBlock', \"0\");\r\n        window.localStorage.removeItem('contactAddresses');\r\n        for (var i=0;i<contacts.length;i++) {\r\n            window.localStorage.removeItem(contacts[i]);\r\n        }\r\n    }\r\n}\r\n\r\nexport default LocalStorageManager;"]},"metadata":{},"sourceType":"module"}