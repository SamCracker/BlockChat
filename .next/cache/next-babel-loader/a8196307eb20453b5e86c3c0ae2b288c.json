{"ast":null,"code":"import _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\BlockChat\\\\BlockChat\\\\views\\\\HeaderMenu.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport { Menu, Container, Button, Label, Loader, List, Image, Icon, Dropdown } from 'semantic-ui-react';\nimport Head from 'next/head';\nimport web3 from '../ethereum/web3';\nimport Constant from '../support/Constant';\nimport Config from '../support/Config';\nimport appDispatcher from '../core/AppDispatcher';\nimport contractManager from '../core/ContractManager';\n\nvar HeaderMenu = /*#__PURE__*/function (_Component) {\n  _inherits(HeaderMenu, _Component);\n\n  function HeaderMenu(_props) {\n    var _this;\n\n    _classCallCheck(this, HeaderMenu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HeaderMenu).call(this, _props));\n\n    _defineProperty(_assertThisInitialized(_this), \"clearAllData\", function () {\n      window.localStorage.clear();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getAccountInfo\", function () {\n      var address = _this.account.getAddress();\n\n      if (address) {\n        _this.setState({\n          address: address,\n          balance: _this.account.balance,\n          isLoading: false,\n          isJoined: _this.account.isJoined\n        });\n      } else {\n        if (_this.reloadCount == 1) {\n          _this.setState({\n            isLoading: false\n          });\n        } else {\n          _this.reloadCount++;\n          setTimeout(_this.getAccountInfo, 800);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDropdownClicked\", function (event, data) {\n      if (data.name == 'updateProfile') {\n        appDispatcher.dispatch({\n          action: Constant.ACTION.OPEN_UPDATE_PROFILE\n        });\n      } else if (data.name == 'logOutItem') {\n        _this.clearAllData();\n\n        window.location.reload();\n      } else if (data.name == 'settingsItem') {\n        appDispatcher.dispatch({\n          action: Constant.ACTION.OPEN_SETTINGS_MODAL\n        });\n      } else if (data.name == 'changeEthNetwork') {\n        if (data.networkid != Config.ENV.EthNetworkId) {\n          Config.ENV.EthNetworkId = data.networkid;\n\n          _this.removeNetworkDependentData();\n\n          window.location.reload();\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeNetworkDependentData\", function () {\n      _this.account.storageManager.removeNetworkDependentData();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleJoinClicked\", function () {\n      var publicKeyBuffer = _this.account.getPublicKeyBuffer();\n\n      props.contractManager.joinContract(publicKeyBuffer, function (resultEvent) {\n        if (resultEvent == Constant.EVENT.ON_REJECTED || resultEvent == Constant.EVENT.ON_ERROR) {\n          _this.setState({\n            isJoinButtonLoading: false\n          });\n        } else if (resultEvent == Constant.EVENT.ON_RECEIPT) {\n          window.location.reload();\n        }\n      });\n\n      _this.setState({\n        isJoinButtonLoading: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleImportPrivateKeyClicked\", function () {\n      appDispatcher.dispatch({\n        action: Constant.ACTION.OPEN_PRIVATE_KEY_MODAL\n      });\n    });\n\n    _this.account = _props.account;\n    _this.contractManager = contractManager; // console.log(contractManager);\n\n    _this.transactionDispatcher = _props.transactionDispatcher;\n    _this.state = {\n      address: \"\",\n      balance: \"\",\n      name: \"\",\n      avatarUrl: \"\",\n      isLoading: true,\n      isJoinButtonLoading: false,\n      isJoined: false,\n      numPendingTx: 0\n    };\n    _this.reloadCount = 0;\n    return _this;\n  }\n\n  _createClass(HeaderMenu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.account) {\n        this.getAccountInfo();\n        appDispatcher.register(function (payload) {\n          if (payload.action == Constant.EVENT.ACCOUNT_BALANCE_UPDATED) {\n            _this2.setState({\n              balance: _this2.account.balance\n            });\n          } else if (payload.action == Constant.EVENT.ACCOUNT_INFO_UPDATED) {\n            _this2.setState({\n              name: payload.profile.name,\n              avatarUrl: payload.profile.avatarUrl,\n              isJoined: payload.profile.isJoined\n            });\n          }\n        });\n        this.transactionDispatcher.register(function (payload) {\n          if (payload.action == Constant.EVENT.PENDING_TRANSACTION_UPDATED) {\n            _this2.setState({\n              numPendingTx: payload.numPendingTx\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var accountInfo = __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      });\n\n      if (this.account) {\n        if (this.state.isLoading == false) {\n          if (this.state.address) {\n            var addressExplorerUrl = Config.ENV.ExplorerUrl + 'address/' + this.state.address;\n            var dropdownTrigger;\n\n            if (this.state.avatarUrl) {\n              dropdownTrigger = __jsx(\"span\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 123\n                },\n                __self: this\n              }, __jsx(Image, {\n                src: this.state.avatarUrl,\n                avatar: true,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 123\n                },\n                __self: this\n              }), this.state.name ? this.state.name : this.state.address.substr(0, 10));\n            } else {\n              dropdownTrigger = __jsx(\"span\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 127\n                },\n                __self: this\n              }, __jsx(Icon, {\n                name: \"user\",\n                size: \"large\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 127\n                },\n                __self: this\n              }), this.state.name ? this.state.name : this.state.address.substr(0, 10));\n            }\n\n            var networkItems = [];\n\n            for (var i = 0; i < Config.NETWORK_LIST.length; i++) {\n              networkItems.push(__jsx(Dropdown.Item, {\n                key: 'networkItem' + i,\n                networkid: Config.NETWORK_LIST[i].id,\n                name: \"changeEthNetwork\",\n                onClick: this.handleDropdownClicked,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 134\n                },\n                __self: this\n              }, Config.NETWORK_LIST[i].name));\n            }\n\n            var memberInfo;\n\n            if (this.account.isJoined) {\n              memberInfo = __jsx(Dropdown, {\n                item: true,\n                trigger: dropdownTrigger,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 143\n                },\n                __self: this\n              }, __jsx(Dropdown.Menu, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 144\n                },\n                __self: this\n              }, __jsx(Dropdown.Item, {\n                name: \"updateProfile\",\n                onClick: this.handleDropdownClicked,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 145\n                },\n                __self: this\n              }, __jsx(Icon, {\n                name: \"write\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 146\n                },\n                __self: this\n              }), \"Update profile\"), __jsx(Dropdown.Item, {\n                name: \"settingsItem\",\n                onClick: this.handleDropdownClicked,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 148\n                },\n                __self: this\n              }, __jsx(Icon, {\n                name: \"settings\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 149\n                },\n                __self: this\n              }), \"Settings\"), __jsx(Dropdown.Item, {\n                name: \"logOutItem\",\n                onClick: this.handleDropdownClicked,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 151\n                },\n                __self: this\n              }, __jsx(Icon, {\n                name: \"log out\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 152\n                },\n                __self: this\n              }), \"Log out\")));\n            } else {\n              memberInfo = __jsx(Button, {\n                color: \"orange\",\n                onClick: this.handleJoinClicked,\n                loading: this.state.isJoinButtonLoading,\n                disabled: this.state.isJoinButtonLoading,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 159\n                },\n                __self: this\n              }, \"Join \", Constant.APP_NAME);\n            }\n\n            var pendingTxItem;\n\n            if (this.state.numPendingTx > 0) {\n              pendingTxItem = __jsx(Label, {\n                as: \"a\",\n                color: \"yellow\",\n                href: addressExplorerUrl,\n                target: \"_blank\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 168\n                },\n                __self: this\n              }, __jsx(Icon, {\n                name: \"spinner\",\n                loading: true,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 169\n                },\n                __self: this\n              }), this.state.numPendingTx, \" pending tx\");\n            }\n\n            accountInfo = __jsx(Menu.Menu, {\n              position: \"right\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 176\n              },\n              __self: this\n            }, __jsx(Menu.Item, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 177\n              },\n              __self: this\n            }, __jsx(Dropdown, {\n              item: true,\n              text: Config.ENV.NetworkName,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 178\n              },\n              __self: this\n            }, __jsx(Dropdown.Menu, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 179\n              },\n              __self: this\n            }, networkItems))), __jsx(Menu.Item, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 184\n              },\n              __self: this\n            }, __jsx(List, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 185\n              },\n              __self: this\n            }, __jsx(List.Item, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 186\n              },\n              __self: this\n            }, __jsx(\"a\", {\n              href: addressExplorerUrl,\n              target: \"_blank\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 187\n              },\n              __self: this\n            }, this.state.address)), __jsx(List.Item, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 191\n              },\n              __self: this\n            }, \"Balance: \", __jsx(Label, {\n              as: \"a\",\n              href: addressExplorerUrl,\n              target: \"_blank\",\n              color: \"orange\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 192\n              },\n              __self: this\n            }, _parseFloat(web3.utils.fromWei(\"\" + this.state.balance, 'ether')).toFixed(8) + ' ETH'), pendingTxItem))), __jsx(Menu.Item, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 197\n              },\n              __self: this\n            }, memberInfo));\n          } else {\n            accountInfo = __jsx(Menu.Menu, {\n              position: \"right\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 204\n              },\n              __self: this\n            }, __jsx(Menu.Item, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 205\n              },\n              __self: this\n            }, __jsx(Button, {\n              onClick: this.handleImportPrivateKeyClicked,\n              color: \"blue\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 206\n              },\n              __self: this\n            }, \"Import private key\")));\n          }\n        } else {\n          accountInfo = __jsx(Loader, {\n            inverted: true,\n            active: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212\n            },\n            __self: this\n          });\n        }\n      }\n\n      return __jsx(Menu, {\n        fixed: \"top\",\n        color: \"grey\",\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, __jsx(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.12/semantic.min.css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      })), __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, __jsx(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, __jsx(Image, {\n        src: \"static/images/blockchat.png\",\n        height: 55,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }))), this.account ? accountInfo : __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return HeaderMenu;\n}(Component);\n\nexport default HeaderMenu;","map":{"version":3,"sources":["D:/BlockChat/BlockChat/views/HeaderMenu.js"],"names":["Component","Menu","Container","Button","Label","Loader","List","Image","Icon","Dropdown","Head","web3","Constant","Config","appDispatcher","contractManager","HeaderMenu","props","window","localStorage","clear","address","account","getAddress","setState","balance","isLoading","isJoined","reloadCount","setTimeout","getAccountInfo","event","data","name","dispatch","action","ACTION","OPEN_UPDATE_PROFILE","clearAllData","location","reload","OPEN_SETTINGS_MODAL","networkid","ENV","EthNetworkId","removeNetworkDependentData","storageManager","publicKeyBuffer","getPublicKeyBuffer","joinContract","resultEvent","EVENT","ON_REJECTED","ON_ERROR","isJoinButtonLoading","ON_RECEIPT","OPEN_PRIVATE_KEY_MODAL","transactionDispatcher","state","avatarUrl","numPendingTx","register","payload","ACCOUNT_BALANCE_UPDATED","ACCOUNT_INFO_UPDATED","profile","PENDING_TRANSACTION_UPDATED","accountInfo","addressExplorerUrl","ExplorerUrl","dropdownTrigger","substr","networkItems","i","NETWORK_LIST","length","push","id","handleDropdownClicked","memberInfo","handleJoinClicked","APP_NAME","pendingTxItem","NetworkName","utils","fromWei","toFixed","handleImportPrivateKeyClicked"],"mappings":"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","sourcesContent":["import {Component} from 'react';\r\nimport {\r\n    Menu,\r\n    Container,\r\n    Button,\r\n    Label,\r\n    Loader,\r\n    List,\r\n    Image,\r\n    Icon,\r\n    Dropdown\r\n} from 'semantic-ui-react';\r\nimport Head from 'next/head';\r\nimport web3 from '../ethereum/web3';\r\nimport Constant from '../support/Constant';\r\nimport Config from '../support/Config';\r\nimport appDispatcher from '../core/AppDispatcher';\r\nimport contractManager from '../core/ContractManager';\r\n\r\nclass HeaderMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.account = props.account;\r\n        this.contractManager = contractManager;\r\n        // console.log(contractManager);\r\n        this.transactionDispatcher = props.transactionDispatcher;\r\n        this.state = {address: \"\", balance: \"\", name: \"\", \r\n            avatarUrl: \"\", isLoading: true, isJoinButtonLoading: false, \r\n            isJoined: false, numPendingTx: 0};\r\n        this.reloadCount = 0;\r\n    }\r\n    clearAllData = () => {\r\n        window.localStorage.clear();\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.account) {\r\n            this.getAccountInfo();\r\n            appDispatcher.register((payload) => {\r\n                if (payload.action == Constant.EVENT.ACCOUNT_BALANCE_UPDATED) {\r\n                    this.setState({balance: this.account.balance});\r\n                } else if (payload.action == Constant.EVENT.ACCOUNT_INFO_UPDATED) {\r\n                    this.setState({name: payload.profile.name, avatarUrl: payload.profile.avatarUrl, isJoined: payload.profile.isJoined});\r\n                } \r\n            });\r\n            this.transactionDispatcher.register((payload) => {\r\n                if (payload.action == Constant.EVENT.PENDING_TRANSACTION_UPDATED) {\r\n                    this.setState({numPendingTx: payload.numPendingTx});\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getAccountInfo = () => {\r\n        var address = this.account.getAddress();\r\n        if (address) {\r\n            this.setState({address: address, balance: this.account.balance, isLoading: false, isJoined: this.account.isJoined});\r\n        } else {\r\n            if (this.reloadCount == 1) {\r\n                this.setState({isLoading: false});\r\n            } else {\r\n                this.reloadCount++;\r\n                setTimeout(this.getAccountInfo, 800);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleDropdownClicked = (event, data) => {\r\n        if (data.name == 'updateProfile') {\r\n            appDispatcher.dispatch({\r\n                action: Constant.ACTION.OPEN_UPDATE_PROFILE\r\n            });\r\n        } else if (data.name == 'logOutItem') {\r\n            this.clearAllData();\r\n            window.location.reload();\r\n        } else if (data.name == 'settingsItem') {\r\n            appDispatcher.dispatch({\r\n                action: Constant.ACTION.OPEN_SETTINGS_MODAL\r\n            })\r\n        } \r\n         else if (data.name == 'changeEthNetwork') {\r\n            if (data.networkid != Config.ENV.EthNetworkId) {\r\n                Config.ENV.EthNetworkId = data.networkid;\r\n                this.removeNetworkDependentData();\r\n                window.location.reload();\r\n            }\r\n        }\r\n    }\r\n\r\n    removeNetworkDependentData = () => {\r\n        this.account.storageManager.removeNetworkDependentData();\r\n    }\r\n\r\n    handleJoinClicked = () => {\r\n        var publicKeyBuffer = this.account.getPublicKeyBuffer();\r\n        props.contractManager.joinContract(publicKeyBuffer, (resultEvent) => {\r\n            if (resultEvent == Constant.EVENT.ON_REJECTED || resultEvent == Constant.EVENT.ON_ERROR) {\r\n                this.setState({isJoinButtonLoading: false});\r\n            } else if (resultEvent == Constant.EVENT.ON_RECEIPT) {\r\n                window.location.reload();\r\n            }\r\n        });\r\n        this.setState({isJoinButtonLoading: true});\r\n    }\r\n\r\n    handleImportPrivateKeyClicked = () => {\r\n        appDispatcher.dispatch({\r\n            action: Constant.ACTION.OPEN_PRIVATE_KEY_MODAL\r\n        });\r\n    }\r\n\r\n    render() {\r\n        var accountInfo = (<div></div>);\r\n\r\n        if (this.account) {\r\n            if (this.state.isLoading == false) {\r\n                if (this.state.address) {\r\n                    var addressExplorerUrl = Config.ENV.ExplorerUrl + 'address/' + this.state.address;\r\n                    var dropdownTrigger;\r\n\r\n                    if (this.state.avatarUrl) { \r\n                        dropdownTrigger = (\r\n                            <span><Image src={this.state.avatarUrl} avatar/>{ this.state.name ? this.state.name : this.state.address.substr(0,10)}</span>\r\n                        );\r\n                    } else {\r\n                        dropdownTrigger = (\r\n                            <span><Icon name='user' size='large'/>{ this.state.name ? this.state.name : this.state.address.substr(0,10)}</span>\r\n                        );\r\n                    }\r\n\r\n                    var networkItems = [];\r\n                    for (var i=0;i<Config.NETWORK_LIST.length;i++) {\r\n                        networkItems.push(\r\n                            <Dropdown.Item key={'networkItem' + i} networkid={Config.NETWORK_LIST[i].id} name='changeEthNetwork' onClick={this.handleDropdownClicked}>\r\n                                {Config.NETWORK_LIST[i].name}\r\n                            </Dropdown.Item>\r\n                        );\r\n                    }\r\n\r\n                    var memberInfo;\r\n                    if (this.account.isJoined) {\r\n                        memberInfo = (\r\n                            <Dropdown item trigger={dropdownTrigger}>\r\n                                <Dropdown.Menu>\r\n                                    <Dropdown.Item name='updateProfile' onClick={this.handleDropdownClicked}>\r\n                                        <Icon name='write'/>Update profile\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Item name='settingsItem' onClick={this.handleDropdownClicked}>\r\n                                        <Icon name='settings'/>Settings\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Item name='logOutItem' onClick={this.handleDropdownClicked}>\r\n                                        <Icon name='log out'/>Log out\r\n                                    </Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        );\r\n                    } else {\r\n                        memberInfo = (\r\n                            <Button color='orange' onClick={this.handleJoinClicked} \r\n                                loading={this.state.isJoinButtonLoading} \r\n                                disabled={this.state.isJoinButtonLoading}>Join {Constant.APP_NAME}</Button>\r\n                        );\r\n                    }\r\n\r\n                    var pendingTxItem;\r\n                    if (this.state.numPendingTx > 0) {\r\n                        pendingTxItem = (\r\n                            <Label as='a' color='yellow' href={addressExplorerUrl} target='_blank'>\r\n                                <Icon name='spinner' loading/>\r\n                                {this.state.numPendingTx} pending tx\r\n                            </Label>\r\n                        );\r\n                    }\r\n\r\n                    accountInfo = (\r\n                        <Menu.Menu position='right'>\r\n                            <Menu.Item>\r\n                            <Dropdown item text={Config.ENV.NetworkName}>\r\n                                    <Dropdown.Menu>\r\n                                        {networkItems}\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                            </Menu.Item>\r\n                            <Menu.Item>\r\n                                <List>\r\n                                <List.Item>\r\n                                    <a href={addressExplorerUrl} target='_blank'>\r\n                                        {this.state.address}\r\n                                    </a>\r\n                                </List.Item>\r\n                                <List.Item>\r\n                                    Balance: <Label as='a' href={addressExplorerUrl} target='_blank' color='orange'>{parseFloat(web3.utils.fromWei(\"\" +this.state.balance, 'ether')).toFixed(8) + ' ETH' }</Label>\r\n                                    {pendingTxItem}\r\n                                </List.Item>\r\n                                </List>\r\n                            </Menu.Item>\r\n                            <Menu.Item>\r\n                                {memberInfo}\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n                    );\r\n                } else {\r\n                    accountInfo = (\r\n                        <Menu.Menu position='right'>\r\n                            <Menu.Item>\r\n                                <Button onClick={this.handleImportPrivateKeyClicked} color='blue'>Import private key</Button>\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n                    );\r\n                }\r\n            } else {\r\n                accountInfo = (<Loader inverted active />);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Menu fixed='top' color='grey' inverted>\r\n                <Head>\r\n                <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.12/semantic.min.css\"></link>\r\n                </Head>\r\n                <Container>\r\n                <Menu.Item>\r\n                    <a href='/'><Image src='static/images/blockchat.png' height={55} /></a>\r\n                </Menu.Item>\r\n                    {this.account ? accountInfo: (<div></div>)}\r\n                </Container>\r\n            </Menu>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderMenu;"]},"metadata":{},"sourceType":"module"}