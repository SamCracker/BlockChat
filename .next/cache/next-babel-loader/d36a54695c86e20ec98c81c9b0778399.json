{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\BlockChat\\\\BlockChat\\\\views\\\\modals\\\\GuideModal.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport { Modal, Header, Button, Icon } from 'semantic-ui-react';\nimport appDispatcher from '../../core/AppDispatcher';\nimport Constant from '../../support/Constant';\n\nvar GuideModal = /*#__PURE__*/function (_Component) {\n  _inherits(GuideModal, _Component);\n\n  function GuideModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GuideModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GuideModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      modalOpen: false,\n      key: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        modalOpen: false\n      });\n\n      var firstTimeUse = window.localStorage.firstTimeUse;\n\n      if (firstTimeUse == undefined) {\n        window.localStorage.setItem('firstTimeUse', \"false\");\n        appDispatcher.dispatch({\n          action: Constant.ACTION.OPEN_PRIVATE_KEY_MODAL\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(GuideModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.checkForFirstTime();\n      appDispatcher.register(function (payload) {\n        if (payload.action == Constant.ACTION.OPEN_GUIDE) {\n          _this2.setState({\n            modalOpen: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"checkForFirstTime\",\n    value: function checkForFirstTime() {\n      if (typeof Storage !== \"undefined\") {\n        var firstTimeUse = window.localStorage.firstTimeUse;\n\n        if (firstTimeUse == undefined || firstTimeUse == false) {\n          this.setState({\n            modalOpen: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Modal, {\n        open: this.state.modalOpen,\n        onClose: this.handleClose,\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, __jsx(Header, {\n        icon: \"\",\n        content: \"Welcome to BlockChat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), __jsx(Modal.Content, {\n        style: {\n          fontSize: '1.2em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Please read our note carefully\"), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"BlockChat is an Ethereum app that allows you to send encrypted messages via a smart contract that only you and the recipient of a message can decrypt it. BlockChat can operate without any centralized server\"), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"You will be required to key in your BlockChat private key in order to use BlockChat. Make sure that you understand the risk of giving your private key to any third party.\"), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"We recommend you to try BlockChat on Rinkeby test net or Ropsten test Net. You can get free ether on Rinkeby at https://faucet.rinkeby.io/ and https://faucet.ropsten.be/\")), __jsx(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, __jsx(Button, {\n        color: \"green\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, __jsx(Icon, {\n        name: \"checkmark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), \" Got it\")));\n    }\n  }]);\n\n  return GuideModal;\n}(Component);\n\nexport default GuideModal;","map":{"version":3,"sources":["D:/BlockChat/BlockChat/views/modals/GuideModal.js"],"names":["Component","Modal","Header","Button","Icon","appDispatcher","Constant","GuideModal","modalOpen","key","e","preventDefault","setState","firstTimeUse","window","localStorage","undefined","setItem","dispatch","action","ACTION","OPEN_PRIVATE_KEY_MODAL","checkForFirstTime","register","payload","OPEN_GUIDE","Storage","state","handleClose","fontSize"],"mappings":";;;;;;;;;;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SACIC,KADJ,EAEIC,MAFJ,EAGIC,MAHJ,EAIIC,IAJJ,QAKO,mBALP;AAMA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;;IAEMC,U;;;;;;;;;;;;;;;;4DACM;AAAEC,MAAAA,SAAS,EAAE,KAAb;AAAoBC,MAAAA,GAAG,EAAE;AAAzB,K;;kEAEM,UAACC,CAAD,EAAO;AACjBA,MAAAA,CAAC,CAACC,cAAF;;AACA,YAAKC,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE;AAAb,OAAd;;AAEA,UAAIK,YAAY,GAAGC,MAAM,CAACC,YAAP,CAAoBF,YAAvC;;AACA,UAAIA,YAAY,IAAIG,SAApB,EAA+B;AAC3BF,QAAAA,MAAM,CAACC,YAAP,CAAoBE,OAApB,CAA4B,cAA5B,EAA4C,OAA5C;AACAZ,QAAAA,aAAa,CAACa,QAAd,CAAuB;AACnBC,UAAAA,MAAM,EAAEb,QAAQ,CAACc,MAAT,CAAgBC;AADL,SAAvB;AAGH;AACJ,K;;;;;;;wCAEmB;AAAA;;AAChB,WAAKC,iBAAL;AACAjB,MAAAA,aAAa,CAACkB,QAAd,CAAuB,UAACC,OAAD,EAAa;AAChC,YAAIA,OAAO,CAACL,MAAR,IAAkBb,QAAQ,CAACc,MAAT,CAAgBK,UAAtC,EAAkD;AAC9C,UAAA,MAAI,CAACb,QAAL,CAAc;AAACJ,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACH;AACJ,OAJD;AAKH;;;wCAEmB;AAChB,UAAI,OAAOkB,OAAP,KAAoB,WAAxB,EAAqC;AACjC,YAAIb,YAAY,GAAGC,MAAM,CAACC,YAAP,CAAoBF,YAAvC;;AACA,YAAIA,YAAY,IAAIG,SAAhB,IAA6BH,YAAY,IAAI,KAAjD,EAAwD;AACpD,eAAKD,QAAL,CAAc;AAACJ,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACH;AACJ;AACJ;;;6BAEQ;AACL,aACI,MAAC,KAAD;AACI,QAAA,IAAI,EAAE,KAAKmB,KAAL,CAAWnB,SADrB;AAEI,QAAA,OAAO,EAAE,KAAKoB,WAFlB;AAGI,QAAA,IAAI,EAAC,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI,MAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,EAAb;AAAgB,QAAA,OAAO,EAAC,sBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMQ,MAAC,KAAD,CAAO,OAAP;AAAe,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0NAFJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sLALJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qLARJ,CANR,EAgBQ,MAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,OAAO,EAAE,KAAKD,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,YADA,CAhBR,CADJ;AAwBH;;;;EA3DoB5B,S;;AA8DzB,eAAeO,UAAf","sourcesContent":["import {Component} from 'react';\r\nimport {\r\n    Modal,\r\n    Header,\r\n    Button,\r\n    Icon\r\n} from 'semantic-ui-react';\r\nimport appDispatcher from '../../core/AppDispatcher';\r\nimport Constant from '../../support/Constant';\r\n\r\nclass GuideModal extends Component {\r\n    state = { modalOpen: false, key: \"\"}\r\n\r\n    handleClose = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ modalOpen: false })\r\n\r\n        var firstTimeUse = window.localStorage.firstTimeUse;\r\n        if (firstTimeUse == undefined) {\r\n            window.localStorage.setItem('firstTimeUse', \"false\");\r\n            appDispatcher.dispatch({\r\n                action: Constant.ACTION.OPEN_PRIVATE_KEY_MODAL,\r\n            });\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.checkForFirstTime();\r\n        appDispatcher.register((payload) => {\r\n            if (payload.action == Constant.ACTION.OPEN_GUIDE) {\r\n                this.setState({modalOpen: true});\r\n            }\r\n        });\r\n    }\r\n\r\n    checkForFirstTime() {\r\n        if (typeof(Storage) !== \"undefined\") {\r\n            var firstTimeUse = window.localStorage.firstTimeUse;\r\n            if (firstTimeUse == undefined || firstTimeUse == false) {\r\n                this.setState({modalOpen: true});\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                open={this.state.modalOpen}\r\n                onClose={this.handleClose}\r\n                size='small'\r\n                >\r\n                <Header icon=\"\" content=\"Welcome to BlockChat\" />\r\n                    <Modal.Content style={{fontSize: '1.2em'}}>\r\n                        <h2>Please read our note carefully</h2>\r\n                        <p>BlockChat is an Ethereum app that allows you to send encrypted messages via \r\n                            a smart contract that only you and the recipient of a message can decrypt it.\r\n                            BlockChat can operate without any centralized server</p>\r\n                        <p>You will be required to key in your BlockChat private key in order to \r\n                            use BlockChat. Make sure that you understand the risk of giving your \r\n                            private key to any third party.</p>\r\n                        <p>We recommend you to try BlockChat on Rinkeby test net or Ropsten test Net. You can get free ether on Rinkeby at https://faucet.rinkeby.io/ and https://faucet.ropsten.be/</p>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                    <Button color='green' onClick={this.handleClose}>\r\n                        <Icon name='checkmark' /> Got it\r\n                    </Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GuideModal;"]},"metadata":{},"sourceType":"module"}