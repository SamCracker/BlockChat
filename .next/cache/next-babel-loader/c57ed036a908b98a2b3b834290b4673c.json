{"ast":null,"code":"var _jsxFileName = \"D:\\\\BlockChat\\\\BlockChat\\\\views\\\\modals\\\\SettingsModal.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { Modal, Header, Button, Message, Checkbox } from 'semantic-ui-react';\nimport appDispatcher from '../../core/AppDispatcher';\nimport Constant from '../../support/Constant';\n\nclass SettingsModal extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleClose\", e => {\n      e.preventDefault();\n      this.setState({\n        modalOpen: false\n      });\n    });\n\n    _defineProperty(this, \"handleUpdate\", () => {\n      this.account.setAskForTransactionApproval(this.state.askForApproval);\n      this.setState({\n        modalOpen: false\n      });\n    });\n\n    this.account = props.account;\n    this.state = {\n      modalOpen: false,\n      askForApproval: false\n    };\n  }\n\n  componentDidMount() {\n    appDispatcher.register(payload => {\n      if (payload.action == Constant.ACTION.OPEN_SETTINGS_MODAL) {\n        var askForApproval = this.account.askForTransactionApproval;\n        this.setState({\n          modalOpen: true,\n          askForApproval\n        });\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Modal, {\n      open: this.state.modalOpen,\n      onClose: this.handleClose,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, __jsx(Header, {\n      icon: \"\",\n      content: \"Settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), __jsx(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(Checkbox, {\n      toggle: true,\n      label: \"Ask for transaction approval\",\n      checked: this.state.askForApproval,\n      onChange: (event, data) => this.setState({\n        askForApproval: data.checked\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), __jsx(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(Button, {\n      color: \"blue\",\n      onClick: this.handleUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Update\"), __jsx(Button, {\n      color: \"grey\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Close\")));\n  }\n\n}\n\nexport default SettingsModal;","map":{"version":3,"sources":["D:/BlockChat/BlockChat/views/modals/SettingsModal.js"],"names":["Component","Modal","Header","Button","Message","Checkbox","appDispatcher","Constant","SettingsModal","constructor","props","e","preventDefault","setState","modalOpen","account","setAskForTransactionApproval","state","askForApproval","componentDidMount","register","payload","action","ACTION","OPEN_SETTINGS_MODAL","askForTransactionApproval","render","handleClose","event","data","checked","handleUpdate"],"mappings":";;;;;;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SACIC,KADJ,EAEIC,MAFJ,EAGIC,MAHJ,EAIIC,OAJJ,EAKIC,QALJ,QAMO,mBANP;AAOA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,aAAN,SAA4BR,SAA5B,CAAsC;AAClCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,yCAMJC,CAAD,IAAO;AACjBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACH,KATkB;;AAAA,0CAWJ,MAAM;AACjB,WAAKC,OAAL,CAAaC,4BAAb,CAA0C,KAAKC,KAAL,CAAWC,cAArD;AACA,WAAKL,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACH,KAdkB;;AAEf,SAAKC,OAAL,GAAeL,KAAK,CAACK,OAArB;AACA,SAAKE,KAAL,GAAa;AAAEH,MAAAA,SAAS,EAAE,KAAb;AAAoBI,MAAAA,cAAc,EAAE;AAApC,KAAb;AACH;;AAYDC,EAAAA,iBAAiB,GAAG;AAChBb,IAAAA,aAAa,CAACc,QAAd,CAAwBC,OAAD,IAAa;AAChC,UAAIA,OAAO,CAACC,MAAR,IAAkBf,QAAQ,CAACgB,MAAT,CAAgBC,mBAAtC,EAA2D;AACvD,YAAIN,cAAc,GAAG,KAAKH,OAAL,CAAaU,yBAAlC;AACA,aAAKZ,QAAL,CAAc;AAACC,UAAAA,SAAS,EAAE,IAAZ;AAAkBI,UAAAA;AAAlB,SAAd;AACH;AACJ,KALD;AAMH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,KAAD;AACI,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWH,SADrB;AAEI,MAAA,OAAO,EAAE,KAAKa,WAFlB;AAGI,MAAA,IAAI,EAAC,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,EAAb;AAAgB,MAAA,OAAO,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMQ,MAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,KAAK,EAAC,8BAAvB;AAAsD,MAAA,OAAO,EAAE,KAAKV,KAAL,CAAWC,cAA1E;AAA0F,MAAA,QAAQ,EAAE,CAACU,KAAD,EAAQC,IAAR,KAAiB,KAAKhB,QAAL,CAAc;AAACK,QAAAA,cAAc,EAAEW,IAAI,CAACC;AAAtB,OAAd,CAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANR,EASQ,MAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,OAAO,EAAE,KAAKC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAIA,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,OAAO,EAAE,KAAKJ,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJA,CATR,CADJ;AAoBH;;AA/CiC;;AAkDtC,eAAenB,aAAf","sourcesContent":["import {Component} from 'react';\r\nimport {\r\n    Modal,\r\n    Header,\r\n    Button,\r\n    Message,\r\n    Checkbox\r\n} from 'semantic-ui-react';\r\nimport appDispatcher from '../../core/AppDispatcher';\r\nimport Constant from '../../support/Constant';\r\n\r\nclass SettingsModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.account = props.account;\r\n        this.state = { modalOpen: false, askForApproval: false}\r\n    }\r\n\r\n    handleClose = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ modalOpen: false})\r\n    };\r\n\r\n    handleUpdate = () => {\r\n        this.account.setAskForTransactionApproval(this.state.askForApproval);\r\n        this.setState({ modalOpen: false})\r\n    }\r\n\r\n    componentDidMount() {\r\n        appDispatcher.register((payload) => {\r\n            if (payload.action == Constant.ACTION.OPEN_SETTINGS_MODAL) {\r\n                var askForApproval = this.account.askForTransactionApproval;\r\n                this.setState({modalOpen: true, askForApproval});\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                open={this.state.modalOpen}\r\n                onClose={this.handleClose}\r\n                size='small'\r\n                >\r\n                <Header icon=\"\" content='Settings' />\r\n                    <Modal.Content>\r\n                        <Checkbox toggle label='Ask for transaction approval' checked={this.state.askForApproval} onChange={(event, data) => this.setState({askForApproval: data.checked})}/>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                    <Button color='blue' onClick={this.handleUpdate}>\r\n                        Update\r\n                    </Button>\r\n                    <Button color='grey' onClick={this.handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SettingsModal;"]},"metadata":{},"sourceType":"module"}