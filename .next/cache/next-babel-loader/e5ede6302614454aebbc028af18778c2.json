{"ast":null,"code":"var _jsxFileName = \"D:\\\\BlockChat\\\\BlockChat\\\\views\\\\modals\\\\TransactionModal.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { Modal, Header, Button, Message, Loader, Dimmer, Form, Input } from 'semantic-ui-react';\nimport Constant from '../../support/Constant';\nimport web3 from '../../ethereum/web3';\n\nclass TransactionModal extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleReject\", e => {\n      e.preventDefault();\n      this.setState({\n        modalOpen: false\n      });\n      this.dispatcher.dispatch({\n        action: Constant.ACTION.REJECT_TRANSACTION,\n        transactionId: this.state.transactionId\n      });\n    });\n\n    _defineProperty(this, \"handleApprove\", e => {\n      e.preventDefault();\n      this.setState({\n        modalOpen: false\n      });\n      this.dispatcher.dispatch({\n        action: Constant.ACTION.APPROVE_TRANSACTION,\n        transactionId: this.state.transactionId,\n        method: this.method,\n        gasPrice: this.state.gasPrice,\n        gasAmount: this.state.estimatedGas\n      });\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      this.dispatcher.register(payload => {\n        if (payload.action == Constant.ACTION.OPEN_TRANSACTION_MODAL) {\n          this.method = payload.method;\n          this.setState({\n            modalOpen: true,\n            estimatedGas: 0,\n            gasPrice: 0,\n            transactionId: payload.transactionId\n          });\n          this.updateInfo();\n        }\n      });\n    });\n\n    _defineProperty(this, \"updateInfo\", async () => {\n      var estimatedGas;\n      var warningMessage = \"\";\n\n      try {\n        estimatedGas = await this.method.estimateGas({\n          gas: 3000000 // from: this.account.getAddress()\n\n        });\n      } catch (err) {\n        estimatedGas = 3000000;\n\n        if (err) {\n          warningMessage = err.message;\n        }\n      }\n\n      var gasPrice = await web3.eth.getGasPrice();\n      this.setState({\n        estimatedGas,\n        gasPrice,\n        warningMessage\n      });\n    });\n\n    this.dispatcher = props.dispatcher;\n    this.state = {\n      modalOpen: false,\n      estimatedGas: 0,\n      gasPrice: 0,\n      transactionId: 0,\n      warningMessage: \"\"\n    };\n  }\n\n  render() {\n    var content = __jsx(Dimmer.Dimmable, {\n      as: Modal.Content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, __jsx(Dimmer, {\n      active: true,\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, __jsx(Loader, {\n      active: true,\n      inline: \"centered\",\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })));\n\n    if (this.state.gasPrice) {\n      content = __jsx(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, __jsx(Form, {\n        warning: this.state.warningMessage != \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, __jsx(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"The gas price is suggested by the last few blocks median gas price.\"), __jsx(Form.Field, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Gas limit: \"), __jsx(\"input\", {\n        value: this.state.estimatedGas,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), __jsx(Form.Field, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Gas price\"), __jsx(Input, {\n        value: web3.utils.fromWei(this.state.gasPrice, 'gwei'),\n        label: {\n          basic: true,\n          content: 'Gwei'\n        },\n        labelPosition: \"right\",\n        onChange: e => {\n          if (e.target.value < 1000000) {\n            this.setState({\n              gasPrice: web3.utils.toWei(e.target.value, 'gwei')\n            });\n          }\n        },\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), __jsx(Form.Field, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Transaction fee: \"), __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, web3.utils.fromWei((this.state.estimatedGas * this.state.gasPrice).toString(), 'ether') + ' ETH')), __jsx(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, __jsx(Message, {\n        warning: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, this.state.warningMessage))));\n    }\n\n    return __jsx(Modal, {\n      open: this.state.modalOpen,\n      onClose: this.handleClose,\n      size: \"mini\",\n      closeOnDimmerClick: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, __jsx(Header, {\n      icon: \"\",\n      content: \"Confirm transaction\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), content, __jsx(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, __jsx(Button, {\n      color: \"orange\",\n      onClick: this.handleApprove,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Approve\"), __jsx(Button, {\n      color: \"red\",\n      onClick: this.handleReject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Reject\")));\n  }\n\n}\n\nexport default TransactionModal;","map":{"version":3,"sources":["D:/BlockChat/BlockChat/views/modals/TransactionModal.js"],"names":["Component","Modal","Header","Button","Message","Loader","Dimmer","Form","Input","Constant","web3","TransactionModal","constructor","props","e","preventDefault","setState","modalOpen","dispatcher","dispatch","action","ACTION","REJECT_TRANSACTION","transactionId","state","APPROVE_TRANSACTION","method","gasPrice","gasAmount","estimatedGas","register","payload","OPEN_TRANSACTION_MODAL","updateInfo","warningMessage","estimateGas","gas","err","message","eth","getGasPrice","render","content","Content","utils","fromWei","basic","target","value","toWei","textAlign","toString","handleClose","handleApprove","handleReject"],"mappings":"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","sourcesContent":["import {Component} from 'react';\r\nimport {\r\n    Modal,\r\n    Header,\r\n    Button,\r\n    Message,\r\n    Loader,\r\n    Dimmer,\r\n    Form,\r\n    Input\r\n} from 'semantic-ui-react';\r\nimport Constant from '../../support/Constant';\r\nimport web3 from '../../ethereum/web3';\r\n\r\nclass TransactionModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.dispatcher = props.dispatcher;\r\n        this.state = { modalOpen: false, estimatedGas: 0, gasPrice: 0, transactionId: 0, warningMessage: \"\"};\r\n    }\r\n\r\n    handleReject = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ modalOpen: false})\r\n\r\n        this.dispatcher.dispatch({\r\n            action: Constant.ACTION.REJECT_TRANSACTION,\r\n            transactionId: this.state.transactionId\r\n        })\r\n    };\r\n\r\n    handleApprove = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ modalOpen: false})\r\n\r\n        this.dispatcher.dispatch({\r\n            action: Constant.ACTION.APPROVE_TRANSACTION,\r\n            transactionId: this.state.transactionId,\r\n            method: this.method,\r\n            gasPrice: this.state.gasPrice,\r\n            gasAmount: this.state.estimatedGas\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.dispatcher.register((payload) => {\r\n            if (payload.action == Constant.ACTION.OPEN_TRANSACTION_MODAL) {\r\n                this.method = payload.method;\r\n                this.setState({modalOpen: true, estimatedGas: 0, gasPrice: 0, transactionId: payload.transactionId});\r\n                this.updateInfo();\r\n            }\r\n        });\r\n    }\r\n\r\n    updateInfo = async () => {\r\n        var estimatedGas;\r\n        var warningMessage = \"\";\r\n        try {\r\n            estimatedGas = await this.method.estimateGas({\r\n                gas: 3000000\r\n                // from: this.account.getAddress()\r\n            });\r\n        } catch(err) {\r\n            estimatedGas = 3000000;\r\n            if (err) {\r\n                warningMessage = err.message;\r\n            }\r\n        }\r\n        var gasPrice = await web3.eth.getGasPrice();\r\n        this.setState({estimatedGas, gasPrice, warningMessage});\r\n    }\r\n\r\n    render() {\r\n        var content = (\r\n            <Dimmer.Dimmable as={Modal.Content}>\r\n                <Dimmer active inverted><Loader active inline='centered' inverted /></Dimmer>\r\n            </Dimmer.Dimmable>\r\n        );\r\n        if (this.state.gasPrice) {\r\n            content = (\r\n            <Modal.Content>\r\n                <Form warning={this.state.warningMessage != \"\"}>\r\n                    <Form.Field>\r\n                    The gas price is suggested by the last few blocks median gas price.\r\n                    </Form.Field>\r\n                    <Form.Field inline>\r\n                    <label>Gas limit: </label>\r\n                    <input value={this.state.estimatedGas} disabled />\r\n                    </Form.Field>\r\n                    <Form.Field inline>\r\n                    <label>Gas price</label>\r\n                    <Input value={web3.utils.fromWei(this.state.gasPrice, 'gwei')} \r\n                        label={{basic: true, content: 'Gwei'}} labelPosition='right'\r\n                        onChange={(e) => {\r\n                                if (e.target.value < 1000000) {\r\n                                    this.setState({gasPrice: web3.utils.toWei(e.target.value, 'gwei')});\r\n                                }\r\n                            }\r\n                        }\r\n                        style={{textAlign: 'right'}}/>\r\n                    </Form.Field>\r\n                    <Form.Field inline>\r\n                    <label>Transaction fee: </label>\r\n                    <label>{web3.utils.fromWei((this.state.estimatedGas*this.state.gasPrice).toString(), 'ether') + ' ETH'}</label>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <Message warning>{this.state.warningMessage}</Message>\r\n                    </Form.Field>\r\n                </Form>\r\n            </Modal.Content>)\r\n        }\r\n\r\n        return (\r\n            <Modal\r\n                open={this.state.modalOpen}\r\n                onClose={this.handleClose}\r\n                size='mini'\r\n                closeOnDimmerClick={false}\r\n                >\r\n                <Header icon=\"\" content='Confirm transaction' />\r\n                    {content}\r\n                    <Modal.Actions>\r\n                    <Button color='orange' onClick={this.handleApprove}>\r\n                        Approve\r\n                    </Button>\r\n                    <Button color='red' onClick={this.handleReject}>\r\n                        Reject\r\n                    </Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TransactionModal;"]},"metadata":{},"sourceType":"module"}