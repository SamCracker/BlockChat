{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport { Button, Container, List, Image, Grid, Message, Rail, Sticky, Input, Segment } from 'semantic-ui-react';\nimport HeaderMenu from '../views/HeaderMenu';\nimport web3 from '../ethereum/web3';\nimport PrivateKeyModal from '../views/modals/EnterPrivateKeyModal';\nimport UpdateProfileModal from '../views/modals/UpdateProfileModal';\nimport GuideModal from '../views/modals/GuideModal';\nimport Head from 'next/head';\nimport AppManager from '../core/AppManager';\nimport ContactList from '../views/ContactList';\nimport Chat from '../views/Chat';\nimport ErrorModal from '../views/modals/ErrorModal';\nimport SettingsModal from '../views/modals/SettingsModal';\nimport TransactionModal from '../views/modals/TransactionModal';\nimport Footer from '../views/Footer';\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n    _this.state = {\n      width: 0,\n      height: 0,\n      contactList: [],\n      messages: [],\n      selectedContact: \"\"\n    };\n    _this.updateWindowDimensions = _this.updateWindowDimensions.bind(_assertThisInitialized(_this));\n    _this.app = new AppManager();\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions);\n    }\n  }, {\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      this.app.initialize();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n  }, {\n    key: \"updateWindowDimensions\",\n    value: function updateWindowDimensions() {\n      this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var account = this.app.account;\n      var contractManager = this.app.contractManager;\n      var transactionDispatcher = this.app.getTransactionDispatcher();\n      var listHeight = this.state.height - 140;\n      return __jsx(Container, null, __jsx(Head, null, __jsx(\"title\", null, \"BlockChat - Decentralized messaging on Ethereum network\")), __jsx(UpdateProfileModal, {\n        account: account,\n        contractManager: contractManager\n      }), __jsx(PrivateKeyModal, {\n        account: account\n      }), __jsx(HeaderMenu, {\n        account: account,\n        transactionDispatcher: transactionDispatcher\n      }), __jsx(GuideModal, null), __jsx(ErrorModal, null), __jsx(SettingsModal, {\n        account: account\n      }), __jsx(TransactionModal, {\n        dispatcher: transactionDispatcher\n      }), __jsx(Grid, {\n        column: 2,\n        style: {\n          paddingTop: 100\n        }\n      }, __jsx(Grid.Row, {\n        stretched: true\n      }, __jsx(Grid.Column, {\n        width: 6,\n        style: {\n          height: listHeight + \"px\",\n          \"float\": 'left'\n        }\n      }, __jsx(ContactList, {\n        height: listHeight,\n        account: account,\n        contractManager: contractManager\n      })), __jsx(Grid.Column, {\n        width: 10,\n        style: {\n          height: listHeight + \"px\",\n          overflow: 'auto',\n          \"float\": 'left'\n        }\n      }, __jsx(Chat, {\n        height: listHeight,\n        account: account,\n        contractManager: contractManager\n      })))), __jsx(Footer, null));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}