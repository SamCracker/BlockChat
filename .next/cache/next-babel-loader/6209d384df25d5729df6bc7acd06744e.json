{"ast":null,"code":"var _jsxFileName = \"D:\\\\BlockChat\\\\BlockChat\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport { Button, Container, List, Image, Grid, Message, Rail, Sticky, Input, Segment } from 'semantic-ui-react';\nimport HeaderMenu from '../views/HeaderMenu';\nimport web3 from '../ethereum/web3';\nimport PrivateKeyModal from '../views/modals/EnterPrivateKeyModal';\nimport UpdateProfileModal from '../views/modals/UpdateProfileModal';\nimport GuideModal from '../views/modals/GuideModal';\nimport Head from 'next/head';\nimport AppManager from '../core/AppManager';\nimport ContactList from '../views/ContactList';\nimport Chat from '../views/Chat';\nimport ErrorModal from '../views/modals/ErrorModal';\nimport SettingsModal from '../views/modals/SettingsModal';\nimport TransactionModal from '../views/modals/TransactionModal';\nimport Footer from '../views/Footer';\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 0,\n      height: 0,\n      contactList: [],\n      messages: [],\n      selectedContact: \"\"\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.app = new AppManager();\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  UNSAFE_componentWillMount() {// this.app.initialize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  }\n\n  render() {\n    var account = this.app.account;\n    var contractManager = this.app.contractManager;\n    var transactionDispatcher = this.app.getTransactionDispatcher();\n    var listHeight = this.state.height - 140;\n    return __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"BlockChat - Decentralized messaging on Ethereum network\")), __jsx(UpdateProfileModal, {\n      account: account,\n      contractManager: contractManager,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), __jsx(PrivateKeyModal, {\n      account: account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), __jsx(HeaderMenu, {\n      account: account,\n      transactionDispatcher: transactionDispatcher,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), __jsx(GuideModal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), __jsx(ErrorModal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), __jsx(SettingsModal, {\n      account: account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), __jsx(TransactionModal, {\n      dispatcher: transactionDispatcher,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), __jsx(Grid, {\n      column: 2,\n      style: {\n        paddingTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, __jsx(Grid.Row, {\n      stretched: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(Grid.Column, {\n      width: 6,\n      style: {\n        height: listHeight + \"px\",\n        float: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, __jsx(ContactList, {\n      height: listHeight,\n      account: account,\n      contractManager: contractManager,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), __jsx(Grid.Column, {\n      width: 10,\n      style: {\n        height: listHeight + \"px\",\n        overflow: 'auto',\n        float: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, __jsx(Chat, {\n      height: listHeight,\n      account: account,\n      contractManager: contractManager,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })))), __jsx(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["D:/BlockChat/BlockChat/pages/index.js"],"names":["Component","Button","Container","List","Image","Grid","Message","Rail","Sticky","Input","Segment","HeaderMenu","web3","PrivateKeyModal","UpdateProfileModal","GuideModal","Head","AppManager","ContactList","Chat","ErrorModal","SettingsModal","TransactionModal","Footer","Index","constructor","props","state","width","height","contactList","messages","selectedContact","updateWindowDimensions","bind","app","componentDidMount","window","addEventListener","UNSAFE_componentWillMount","componentWillUnmount","removeEventListener","setState","innerWidth","innerHeight","render","account","contractManager","transactionDispatcher","getTransactionDispatcher","listHeight","paddingTop","float","overflow"],"mappings":"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","sourcesContent":["import {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Container,\r\n    List,\r\n    Image,\r\n    Grid,\r\n    Message,\r\n    Rail,\r\n    Sticky,\r\n    Input,\r\n    Segment\r\n} from 'semantic-ui-react';\r\nimport HeaderMenu from '../views/HeaderMenu';\r\nimport web3 from '../ethereum/web3';\r\nimport PrivateKeyModal from '../views/modals/EnterPrivateKeyModal';\r\nimport UpdateProfileModal from '../views/modals/UpdateProfileModal';\r\nimport GuideModal from '../views/modals/GuideModal';\r\nimport Head from 'next/head';\r\nimport AppManager from '../core/AppManager';\r\nimport ContactList from '../views/ContactList';\r\nimport Chat from '../views/Chat';\r\nimport ErrorModal from '../views/modals/ErrorModal';\r\nimport SettingsModal from '../views/modals/SettingsModal';\r\nimport TransactionModal from '../views/modals/TransactionModal';\r\nimport Footer from '../views/Footer';\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { width: 0, height: 0, contactList: [], messages: [], selectedContact: \"\" };\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n        this.app = new AppManager();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        // this.app.initialize();\r\n    }\r\n      \r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n      \r\n    updateWindowDimensions() {\r\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    }\r\n\r\n    render() {\r\n        var account = this.app.account;\r\n        var contractManager = this.app.contractManager;\r\n        var transactionDispatcher = this.app.getTransactionDispatcher();\r\n\r\n        var listHeight = this.state.height - 140;\r\n        return (\r\n            <Container>\r\n                <Head>\r\n                    <title>BlockChat - Decentralized messaging on Ethereum network</title>\r\n                </Head>\r\n\r\n                <UpdateProfileModal account={account} contractManager={contractManager} />\r\n                <PrivateKeyModal account={account} />\r\n                <HeaderMenu account={account} transactionDispatcher={transactionDispatcher}/>\r\n                <GuideModal />\r\n                <ErrorModal />\r\n                <SettingsModal account={account} />\r\n                <TransactionModal dispatcher={transactionDispatcher} />\r\n            <Grid column={2} style={{paddingTop: 100}}>\r\n                <Grid.Row stretched>\r\n                    <Grid.Column width={6} style={{height: listHeight + \"px\", float: 'left'}}>\r\n                        <ContactList height={listHeight} account={account} contractManager={contractManager}/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={10} style={{height: listHeight + \"px\", overflow: 'auto', float: 'left'}}>\r\n                        <Chat height={listHeight} account={account} contractManager={contractManager}/>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            <Footer />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}