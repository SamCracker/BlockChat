{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport web3 from '../../ethereum/web3';\nimport { Modal, Input, Message, Button, Icon, Header } from 'semantic-ui-react';\nimport appDispatcher from '../../core/AppDispatcher';\nimport Constant from '../../support/Constant';\n\nvar AddContactModal = /*#__PURE__*/function (_Component) {\n  _inherits(AddContactModal, _Component);\n\n  function AddContactModal(props) {\n    var _this;\n\n    _classCallCheck(this, AddContactModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddContactModal).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        errorMessage: \"\"\n      });\n\n      _this.setState({\n        modalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAddContact\", function (e) {\n      if (web3.utils.isAddress(_this.state.address)) {\n        _this.contractManager.addContact(_this.state.address);\n\n        _this.setState({\n          errorMessage: \"\",\n          modalOpen: false\n        });\n      } else {\n        _this.setState({\n          errorMessage: \"Invalid ethereum address\"\n        });\n      }\n    });\n\n    _this.state = {\n      modalOpen: false,\n      errorMessage: \"\",\n      address: \"\"\n    };\n    _this.contractManager = props.contractManager;\n    return _this;\n  }\n\n  _createClass(AddContactModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      appDispatcher.register(function (payload) {\n        if (payload.action == Constant.ACTION.ADD_CONTACT) {\n          _this2.setState({\n            modalOpen: true,\n            errorMessage: \"\",\n            isLoading: false,\n            address: \"\"\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(Modal, {\n        open: this.state.modalOpen,\n        onClose: this.handleClose,\n        size: \"small\"\n      }, __jsx(Header, {\n        icon: \"\",\n        content: \"Add contact by address\"\n      }), __jsx(Modal.Content, null, __jsx(Input, {\n        fluid: true,\n        value: this.state.address,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            address: event.target.value\n          });\n        }\n      }), __jsx(Message, {\n        error: true,\n        header: this.state.errorMessage,\n        hidden: this.state.errorMessage == \"\"\n      })), __jsx(Modal.Actions, null, __jsx(Button, {\n        color: \"orange\",\n        onClick: this.handleAddContact\n      }, __jsx(Icon, {\n        name: \"checkmark\"\n      }), \" Add\"), __jsx(Button, {\n        color: \"grey\",\n        onClick: this.handleClose\n      }, __jsx(Icon, {\n        name: \"close\"\n      }), \" Close\")));\n    }\n  }]);\n\n  return AddContactModal;\n}(Component);\n\nexport default AddContactModal;","map":null,"metadata":{},"sourceType":"module"}