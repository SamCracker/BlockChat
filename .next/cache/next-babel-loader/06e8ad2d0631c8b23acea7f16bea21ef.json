{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport { Modal, Header, Button, Icon, Input, Message } from 'semantic-ui-react';\nimport appDispatcher from '../../core/AppDispatcher';\nimport Constant from '../../support/Constant';\n\nvar EnterPrivateKeyModal = /*#__PURE__*/function (_Component) {\n  _inherits(EnterPrivateKeyModal, _Component);\n\n  function EnterPrivateKeyModal(props) {\n    var _this;\n\n    _classCallCheck(this, EnterPrivateKeyModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EnterPrivateKeyModal).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        errorMessage: \"\"\n      });\n\n      _this.setState({\n        modalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleConfirm\", function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        errorMessage: \"\"\n      });\n\n      var success = _this.account.storePrivateKey(_this.state.key);\n\n      if (success) {\n        _this.setState({\n          modalOpen: false\n        });\n\n        window.location.reload();\n      } else {\n        _this.setState({\n          errorMessage: \"Invalid private key\"\n        });\n      }\n    });\n\n    _this.state = {\n      modalOpen: false,\n      key: \"\",\n      errorMessage: \"\"\n    };\n    _this.account = props.account;\n    return _this;\n  }\n\n  _createClass(EnterPrivateKeyModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      appDispatcher.register(function (payload) {\n        if (payload.action == Constant.ACTION.OPEN_PRIVATE_KEY_MODAL) {\n          _this2.setState({\n            modalOpen: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(Modal, {\n        open: this.state.modalOpen,\n        onClose: this.handleClose,\n        size: \"small\"\n      }, __jsx(Header, {\n        icon: \"\",\n        content: \"Import private key\"\n      }), __jsx(Modal.Content, null, __jsx(Input, {\n        fluid: true,\n        value: this.state.key,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            key: event.target.value\n          });\n        },\n        placeholder: \"Ethereum private key\"\n      }), __jsx(Message, {\n        error: true,\n        header: this.state.errorMessage,\n        hidden: this.state.errorMessage == \"\"\n      }), __jsx(\"p\", {\n        style: {\n          marginTop: 20\n        }\n      }, \"By clicking Confirm, you also agree to our \", __jsx(\"a\", {\n        href: \"/terms\",\n        target: \"_blank\"\n      }, \"Terms of use\"))), __jsx(Modal.Actions, null, __jsx(Button, {\n        color: \"blue\",\n        onClick: this.handleConfirm\n      }, __jsx(Icon, {\n        name: \"checkmark\"\n      }), \" Confirm\"), __jsx(Button, {\n        color: \"grey\",\n        onClick: this.handleClose\n      }, __jsx(Icon, {\n        name: \"close\"\n      }), \" Close\")));\n    }\n  }]);\n\n  return EnterPrivateKeyModal;\n}(Component);\n\nexport default EnterPrivateKeyModal;","map":null,"metadata":{},"sourceType":"module"}