{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\BlockChat\\\\BlockChat\\\\views\\\\modals\\\\AddContactModal.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport web3 from '../../ethereum/web3';\nimport { Modal, Input, Message, Button, Icon, Header } from 'semantic-ui-react';\nimport appDispatcher from '../../core/AppDispatcher';\nimport Constant from '../../support/Constant';\n\nvar AddContactModal = /*#__PURE__*/function (_Component) {\n  _inherits(AddContactModal, _Component);\n\n  function AddContactModal(props) {\n    var _this;\n\n    _classCallCheck(this, AddContactModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddContactModal).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        errorMessage: \"\"\n      });\n\n      _this.setState({\n        modalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAddContact\", function (e) {\n      if (web3.utils.isAddress(_this.state.address)) {\n        _this.contractManager.addContact(_this.state.address);\n\n        _this.setState({\n          errorMessage: \"\",\n          modalOpen: false\n        });\n      } else {\n        _this.setState({\n          errorMessage: \"Invalid ethereum address\"\n        });\n      }\n    });\n\n    _this.state = {\n      modalOpen: false,\n      errorMessage: \"\",\n      address: \"\"\n    };\n    _this.contractManager = props.contractManager;\n    return _this;\n  }\n\n  _createClass(AddContactModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      appDispatcher.register(function (payload) {\n        if (payload.action == Constant.ACTION.ADD_CONTACT) {\n          _this2.setState({\n            modalOpen: true,\n            errorMessage: \"\",\n            isLoading: false,\n            address: \"\"\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(Modal, {\n        open: this.state.modalOpen,\n        onClose: this.handleClose,\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, __jsx(Header, {\n        icon: \"\",\n        content: \"Add contact by address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), __jsx(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, __jsx(Input, {\n        fluid: true,\n        value: this.state.address,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            address: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), __jsx(Message, {\n        error: true,\n        header: this.state.errorMessage,\n        hidden: this.state.errorMessage == \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), __jsx(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, __jsx(Button, {\n        color: \"orange\",\n        onClick: this.handleAddContact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, __jsx(Icon, {\n        name: \"checkmark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), \" Add\"), __jsx(Button, {\n        color: \"grey\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, __jsx(Icon, {\n        name: \"close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), \" Close\")));\n    }\n  }]);\n\n  return AddContactModal;\n}(Component);\n\nexport default AddContactModal;","map":{"version":3,"sources":["D:/BlockChat/BlockChat/views/modals/AddContactModal.js"],"names":["Component","web3","Modal","Input","Message","Button","Icon","Header","appDispatcher","Constant","AddContactModal","props","e","preventDefault","setState","errorMessage","modalOpen","utils","isAddress","state","address","contractManager","addContact","register","payload","action","ACTION","ADD_CONTACT","isLoading","handleClose","event","target","value","handleAddContact"],"mappings":"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","sourcesContent":["import {Component} from 'react';\r\nimport web3 from '../../ethereum/web3';\r\nimport {\r\n    Modal,\r\n    Input,\r\n    Message,\r\n    Button,\r\n    Icon,\r\n    Header\r\n} from 'semantic-ui-react';\r\nimport appDispatcher from '../../core/AppDispatcher';\r\nimport Constant from '../../support/Constant';\r\n\r\nclass AddContactModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { modalOpen: false, errorMessage: \"\", address: \"\"}\r\n        this.contractManager = props.contractManager;\r\n    }\r\n    \r\n    componentDidMount() {\r\n        appDispatcher.register((payload) => {\r\n            if (payload.action == Constant.ACTION.ADD_CONTACT) {\r\n                this.setState({modalOpen: true, errorMessage: \"\", isLoading: false, address: \"\"});\r\n            }\r\n        })\r\n    }\r\n\r\n    handleClose = (e) => {\r\n        e.preventDefault();\r\n        this.setState({errorMessage: \"\"});\r\n        this.setState({ modalOpen: false })\r\n    };\r\n\r\n    handleAddContact = (e) => {\r\n        if (web3.utils.isAddress(this.state.address)) {\r\n            this.contractManager.addContact(this.state.address);\r\n            this.setState({errorMessage: \"\", modalOpen: false});\r\n        } else {\r\n            this.setState({errorMessage: \"Invalid ethereum address\"});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                open={this.state.modalOpen}\r\n                onClose={this.handleClose}\r\n                size='small'\r\n                >\r\n                <Header icon=\"\" content=\"Add contact by address\" />\r\n                    <Modal.Content>\r\n                        <Input fluid value={this.state.address} onChange={event => this.setState({address: event.target.value})}/>\r\n                        <Message error header={this.state.errorMessage} hidden={this.state.errorMessage == \"\"}/>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                    <Button color='orange' onClick={this.handleAddContact}>\r\n                        <Icon name='checkmark' /> Add\r\n                    </Button>\r\n                    <Button color='grey' onClick={this.handleClose}>\r\n                        <Icon name='close' /> Close\r\n                    </Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddContactModal;"]},"metadata":{},"sourceType":"module"}