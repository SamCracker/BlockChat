{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { Modal, Header, Button, Icon, Input, Message } from 'semantic-ui-react';\nimport appDispatcher from '../../core/AppDispatcher';\nimport Constant from '../../support/Constant';\n\nclass EnterPrivateKeyModal extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleClose\", e => {\n      e.preventDefault();\n      this.setState({\n        errorMessage: \"\"\n      });\n      this.setState({\n        modalOpen: false\n      });\n    });\n\n    _defineProperty(this, \"handleConfirm\", e => {\n      e.preventDefault();\n      this.setState({\n        errorMessage: \"\"\n      });\n      var success = this.account.storePrivateKey(this.state.key);\n\n      if (success) {\n        this.setState({\n          modalOpen: false\n        });\n        window.location.reload();\n      } else {\n        this.setState({\n          errorMessage: \"Invalid private key\"\n        });\n      }\n    });\n\n    this.state = {\n      modalOpen: false,\n      key: \"\",\n      errorMessage: \"\"\n    };\n    this.account = props.account;\n  }\n\n  componentDidMount() {\n    appDispatcher.register(payload => {\n      if (payload.action == Constant.ACTION.OPEN_PRIVATE_KEY_MODAL) {\n        this.setState({\n          modalOpen: true\n        });\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Modal, {\n      open: this.state.modalOpen,\n      onClose: this.handleClose,\n      size: \"small\"\n    }, __jsx(Header, {\n      icon: \"\",\n      content: \"Import private key\"\n    }), __jsx(Modal.Content, null, __jsx(Input, {\n      fluid: true,\n      value: this.state.key,\n      onChange: event => this.setState({\n        key: event.target.value\n      }),\n      placeholder: \"Ethereum private key\"\n    }), __jsx(Message, {\n      error: true,\n      header: this.state.errorMessage,\n      hidden: this.state.errorMessage == \"\"\n    }), __jsx(\"p\", {\n      style: {\n        marginTop: 20\n      }\n    }, \"By clicking Confirm, you also agree to our \", __jsx(\"a\", {\n      href: \"/terms\",\n      target: \"_blank\"\n    }, \"Terms of use\"))), __jsx(Modal.Actions, null, __jsx(Button, {\n      color: \"blue\",\n      onClick: this.handleConfirm\n    }, __jsx(Icon, {\n      name: \"checkmark\"\n    }), \" Confirm\"), __jsx(Button, {\n      color: \"grey\",\n      onClick: this.handleClose\n    }, __jsx(Icon, {\n      name: \"close\"\n    }), \" Close\")));\n  }\n\n}\n\nexport default EnterPrivateKeyModal;","map":null,"metadata":{},"sourceType":"module"}