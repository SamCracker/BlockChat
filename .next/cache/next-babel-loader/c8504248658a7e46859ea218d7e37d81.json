{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\BlockChat\\\\BlockChat\\\\views\\\\modals\\\\TransactionModal.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport { Modal, Header, Button, Message, Loader, Dimmer, Form, Input } from 'semantic-ui-react';\nimport Constant from '../../support/Constant';\nimport web3 from '../../ethereum/web3';\n\nvar TransactionModal = /*#__PURE__*/function (_Component) {\n  _inherits(TransactionModal, _Component);\n\n  function TransactionModal(props) {\n    var _this;\n\n    _classCallCheck(this, TransactionModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransactionModal).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleReject\", function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        modalOpen: false\n      });\n\n      _this.dispatcher.dispatch({\n        action: Constant.ACTION.REJECT_TRANSACTION,\n        transactionId: _this.state.transactionId\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleApprove\", function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        modalOpen: false\n      });\n\n      _this.dispatcher.dispatch({\n        action: Constant.ACTION.APPROVE_TRANSACTION,\n        transactionId: _this.state.transactionId,\n        method: _this.method,\n        gasPrice: _this.state.gasPrice,\n        gasAmount: _this.state.estimatedGas\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      _this.dispatcher.register(function (payload) {\n        if (payload.action == Constant.ACTION.OPEN_TRANSACTION_MODAL) {\n          _this.method = payload.method;\n\n          _this.setState({\n            modalOpen: true,\n            estimatedGas: 0,\n            gasPrice: 0,\n            transactionId: payload.transactionId\n          });\n\n          _this.updateInfo();\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateInfo\", function _callee() {\n      var estimatedGas, warningMessage, gasPrice;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              warningMessage = \"\";\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(_this.method.estimateGas({\n                gas: 3000000 // from: this.account.getAddress()\n\n              }));\n\n            case 4:\n              estimatedGas = _context.sent;\n              _context.next = 11;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              estimatedGas = 3000000;\n\n              if (_context.t0) {\n                warningMessage = _context.t0.message;\n              }\n\n            case 11:\n              _context.next = 13;\n              return _regeneratorRuntime.awrap(web3.eth.getGasPrice());\n\n            case 13:\n              gasPrice = _context.sent;\n\n              _this.setState({\n                estimatedGas: estimatedGas,\n                gasPrice: gasPrice,\n                warningMessage: warningMessage\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 7]]);\n    });\n\n    _this.dispatcher = props.dispatcher;\n    _this.state = {\n      modalOpen: false,\n      estimatedGas: 0,\n      gasPrice: 0,\n      transactionId: 0,\n      warningMessage: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(TransactionModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var content = __jsx(Dimmer.Dimmable, {\n        as: Modal.Content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, __jsx(Dimmer, {\n        active: true,\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, __jsx(Loader, {\n        active: true,\n        inline: \"centered\",\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })));\n\n      if (this.state.gasPrice) {\n        content = __jsx(Modal.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, __jsx(Form, {\n          warning: this.state.warningMessage != \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, __jsx(Form.Field, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"The gas price is suggested by the last few blocks median gas price.\"), __jsx(Form.Field, {\n          inline: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Gas limit: \"), __jsx(\"input\", {\n          value: this.state.estimatedGas,\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        })), __jsx(Form.Field, {\n          inline: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"Gas price\"), __jsx(Input, {\n          value: web3.utils.fromWei(this.state.gasPrice, 'gwei'),\n          label: {\n            basic: true,\n            content: 'Gwei'\n          },\n          labelPosition: \"right\",\n          onChange: function onChange(e) {\n            if (e.target.value < 1000000) {\n              _this2.setState({\n                gasPrice: web3.utils.toWei(e.target.value, 'gwei')\n              });\n            }\n          },\n          style: {\n            textAlign: 'right'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        })), __jsx(Form.Field, {\n          inline: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"Transaction fee: \"), __jsx(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, web3.utils.fromWei((this.state.estimatedGas * this.state.gasPrice).toString(), 'ether') + ' ETH')), __jsx(Form.Field, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, __jsx(Message, {\n          warning: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, this.state.warningMessage))));\n      }\n\n      return __jsx(Modal, {\n        open: this.state.modalOpen,\n        onClose: this.handleClose,\n        size: \"mini\",\n        closeOnDimmerClick: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, __jsx(Header, {\n        icon: \"\",\n        content: \"Confirm transaction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), content, __jsx(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, __jsx(Button, {\n        color: \"orange\",\n        onClick: this.handleApprove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Approve\"), __jsx(Button, {\n        color: \"red\",\n        onClick: this.handleReject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Reject\")));\n    }\n  }]);\n\n  return TransactionModal;\n}(Component);\n\nexport default TransactionModal;","map":{"version":3,"sources":["D:/BlockChat/BlockChat/views/modals/TransactionModal.js"],"names":["Component","Modal","Header","Button","Message","Loader","Dimmer","Form","Input","Constant","web3","TransactionModal","props","e","preventDefault","setState","modalOpen","dispatcher","dispatch","action","ACTION","REJECT_TRANSACTION","transactionId","state","APPROVE_TRANSACTION","method","gasPrice","gasAmount","estimatedGas","register","payload","OPEN_TRANSACTION_MODAL","updateInfo","warningMessage","estimateGas","gas","message","eth","getGasPrice","content","Content","utils","fromWei","basic","target","value","toWei","textAlign","toString","handleClose","handleApprove","handleReject"],"mappings":"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","sourcesContent":["import {Component} from 'react';\r\nimport {\r\n    Modal,\r\n    Header,\r\n    Button,\r\n    Message,\r\n    Loader,\r\n    Dimmer,\r\n    Form,\r\n    Input\r\n} from 'semantic-ui-react';\r\nimport Constant from '../../support/Constant';\r\nimport web3 from '../../ethereum/web3';\r\n\r\nclass TransactionModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.dispatcher = props.dispatcher;\r\n        this.state = { modalOpen: false, estimatedGas: 0, gasPrice: 0, transactionId: 0, warningMessage: \"\"};\r\n    }\r\n\r\n    handleReject = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ modalOpen: false})\r\n\r\n        this.dispatcher.dispatch({\r\n            action: Constant.ACTION.REJECT_TRANSACTION,\r\n            transactionId: this.state.transactionId\r\n        })\r\n    };\r\n\r\n    handleApprove = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ modalOpen: false})\r\n\r\n        this.dispatcher.dispatch({\r\n            action: Constant.ACTION.APPROVE_TRANSACTION,\r\n            transactionId: this.state.transactionId,\r\n            method: this.method,\r\n            gasPrice: this.state.gasPrice,\r\n            gasAmount: this.state.estimatedGas\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.dispatcher.register((payload) => {\r\n            if (payload.action == Constant.ACTION.OPEN_TRANSACTION_MODAL) {\r\n                this.method = payload.method;\r\n                this.setState({modalOpen: true, estimatedGas: 0, gasPrice: 0, transactionId: payload.transactionId});\r\n                this.updateInfo();\r\n            }\r\n        });\r\n    }\r\n\r\n    updateInfo = async () => {\r\n        var estimatedGas;\r\n        var warningMessage = \"\";\r\n        try {\r\n            estimatedGas = await this.method.estimateGas({\r\n                gas: 3000000\r\n                // from: this.account.getAddress()\r\n            });\r\n        } catch(err) {\r\n            estimatedGas = 3000000;\r\n            if (err) {\r\n                warningMessage = err.message;\r\n            }\r\n        }\r\n        var gasPrice = await web3.eth.getGasPrice();\r\n        this.setState({estimatedGas, gasPrice, warningMessage});\r\n    }\r\n\r\n    render() {\r\n        var content = (\r\n            <Dimmer.Dimmable as={Modal.Content}>\r\n                <Dimmer active inverted><Loader active inline='centered' inverted /></Dimmer>\r\n            </Dimmer.Dimmable>\r\n        );\r\n        if (this.state.gasPrice) {\r\n            content = (\r\n            <Modal.Content>\r\n                <Form warning={this.state.warningMessage != \"\"}>\r\n                    <Form.Field>\r\n                    The gas price is suggested by the last few blocks median gas price.\r\n                    </Form.Field>\r\n                    <Form.Field inline>\r\n                    <label>Gas limit: </label>\r\n                    <input value={this.state.estimatedGas} disabled />\r\n                    </Form.Field>\r\n                    <Form.Field inline>\r\n                    <label>Gas price</label>\r\n                    <Input value={web3.utils.fromWei(this.state.gasPrice, 'gwei')} \r\n                        label={{basic: true, content: 'Gwei'}} labelPosition='right'\r\n                        onChange={(e) => {\r\n                                if (e.target.value < 1000000) {\r\n                                    this.setState({gasPrice: web3.utils.toWei(e.target.value, 'gwei')});\r\n                                }\r\n                            }\r\n                        }\r\n                        style={{textAlign: 'right'}}/>\r\n                    </Form.Field>\r\n                    <Form.Field inline>\r\n                    <label>Transaction fee: </label>\r\n                    <label>{web3.utils.fromWei((this.state.estimatedGas*this.state.gasPrice).toString(), 'ether') + ' ETH'}</label>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <Message warning>{this.state.warningMessage}</Message>\r\n                    </Form.Field>\r\n                </Form>\r\n            </Modal.Content>)\r\n        }\r\n\r\n        return (\r\n            <Modal\r\n                open={this.state.modalOpen}\r\n                onClose={this.handleClose}\r\n                size='mini'\r\n                closeOnDimmerClick={false}\r\n                >\r\n                <Header icon=\"\" content='Confirm transaction' />\r\n                    {content}\r\n                    <Modal.Actions>\r\n                    <Button color='orange' onClick={this.handleApprove}>\r\n                        Approve\r\n                    </Button>\r\n                    <Button color='red' onClick={this.handleReject}>\r\n                        Reject\r\n                    </Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TransactionModal;"]},"metadata":{},"sourceType":"module"}