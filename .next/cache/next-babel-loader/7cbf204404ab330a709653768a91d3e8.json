{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\BlockChat\\\\BlockChat\\\\views\\\\modals\\\\UpdateProfileModal.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport { Modal, Header, Button, Icon, Form } from 'semantic-ui-react';\nimport appDispatcher from '../../core/AppDispatcher';\nimport Constant from '../../support/Constant';\n\nvar UpdateProfileModal = /*#__PURE__*/function (_Component) {\n  _inherits(UpdateProfileModal, _Component);\n\n  function UpdateProfileModal(props) {\n    var _this;\n\n    _classCallCheck(this, UpdateProfileModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpdateProfileModal).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        modalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateProfileClicked\", function (e) {\n      e.preventDefault();\n\n      _this.contractManager.updateProfile(_this.state.name, _this.state.avatarUrl, function (resultEvent) {\n        if (resultEvent == Constant.EVENT.ON_RECEIPT) {\n          window.location.reload();\n        }\n      });\n\n      _this.setState({\n        modalOpen: false\n      });\n    });\n\n    _this.account = props.account;\n    _this.contractManager = props.contractManager;\n    _this.state = {\n      modalOpen: false,\n      name: _this.account.name,\n      avatarUrl: _this.account.avatarUrl\n    };\n    return _this;\n  }\n\n  _createClass(UpdateProfileModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      appDispatcher.register(function (payload) {\n        if (payload.action == Constant.ACTION.OPEN_UPDATE_PROFILE) {\n          _this2.setState({\n            modalOpen: true\n          });\n        } else if (payload.action == Constant.EVENT.ACCOUNT_INFO_UPDATED) {\n          _this2.setState({\n            name: payload.profile.name,\n            avatarUrl: payload.profile.avatarUrl\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(Modal, {\n        open: this.state.modalOpen,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, __jsx(Header, {\n        icon: \"\",\n        content: \"Update name and avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), __jsx(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, __jsx(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, __jsx(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Name\"), __jsx(\"input\", {\n        placeholder: \"Maximum 32 characters\",\n        value: this.state.name,\n        onChange: function onChange(e) {\n          if (e.target.value.length <= 32) {\n            _this3.setState({\n              name: e.target.value\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), __jsx(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Avatar URL\"), __jsx(\"input\", {\n        placeholder: \"Maximum 32 characters\",\n        value: this.state.avatarUrl,\n        onChange: function onChange(e) {\n          if (e.target.value.length <= 32) {\n            _this3.setState({\n              avatarUrl: e.target.value\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"If your avatar URL is longer than 32 characters, please consider using \", __jsx(\"a\", {\n        href: \"https://goo.gl/\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Google URL Shortener\"))))), __jsx(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, __jsx(Button, {\n        color: \"orange\",\n        onClick: this.updateProfileClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Update\"), __jsx(Button, {\n        color: \"grey\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Close\")));\n    }\n  }]);\n\n  return UpdateProfileModal;\n}(Component);\n\nexport default UpdateProfileModal;","map":{"version":3,"sources":["D:/BlockChat/BlockChat/views/modals/UpdateProfileModal.js"],"names":["Component","Modal","Header","Button","Icon","Form","appDispatcher","Constant","UpdateProfileModal","props","e","preventDefault","setState","modalOpen","contractManager","updateProfile","state","name","avatarUrl","resultEvent","EVENT","ON_RECEIPT","window","location","reload","account","register","payload","action","ACTION","OPEN_UPDATE_PROFILE","ACCOUNT_INFO_UPDATED","profile","handleClose","target","value","length","updateProfileClicked"],"mappings":"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","sourcesContent":["import {Component} from 'react';\r\nimport {\r\n    Modal,\r\n    Header,\r\n    Button,\r\n    Icon,\r\n    Form\r\n} from 'semantic-ui-react';\r\nimport appDispatcher from '../../core/AppDispatcher';\r\nimport Constant from '../../support/Constant';\r\n\r\nclass UpdateProfileModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.account = props.account;\r\n        this.contractManager = props.contractManager;\r\n        this.state = {modalOpen: false, name: this.account.name, avatarUrl: this.account.avatarUrl};\r\n    }\r\n\r\n    handleClose = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ modalOpen: false })\r\n    };\r\n\r\n    updateProfileClicked = (e) => {\r\n        e.preventDefault();\r\n        this.contractManager.updateProfile(this.state.name, this.state.avatarUrl, (resultEvent) => {\r\n            if (resultEvent == Constant.EVENT.ON_RECEIPT) {\r\n                window.location.reload();\r\n            }\r\n        });\r\n        this.setState({ modalOpen: false });\r\n    }\r\n\r\n    componentDidMount() {\r\n        appDispatcher.register((payload) => {\r\n            if (payload.action == Constant.ACTION.OPEN_UPDATE_PROFILE) {\r\n                this.setState({modalOpen: true});\r\n            } else if (payload.action == Constant.EVENT.ACCOUNT_INFO_UPDATED) {\r\n                this.setState({name: payload.profile.name, avatarUrl: payload.profile.avatarUrl});\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                open={this.state.modalOpen}\r\n                onClose={this.handleClose}\r\n                >\r\n                <Header icon=\"\" content=\"Update name and avatar\" />\r\n                    <Modal.Content>\r\n                        <Form>\r\n                            <Form.Field>\r\n                            <label>Name</label>\r\n                            <input placeholder='Maximum 32 characters' value={this.state.name} \r\n                                onChange={(e) => {\r\n                                    if (e.target.value.length <= 32) {\r\n                                        this.setState({name: e.target.value});\r\n                                    }\r\n                                }}/>\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                            <label>Avatar URL</label>\r\n                            <input placeholder='Maximum 32 characters' value={this.state.avatarUrl} \r\n                                onChange={(e) => {\r\n                                    if (e.target.value.length <= 32) {\r\n                                        this.setState({avatarUrl: e.target.value});\r\n                                    }\r\n                                }} />\r\n                            <label>If your avatar URL is longer than 32 characters, \r\n                                please consider using <a href='https://goo.gl/' target='_blank'>Google URL Shortener</a></label>\r\n                            </Form.Field>\r\n                        </Form>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                    <Button color='orange' onClick={this.updateProfileClicked}>\r\n                        Update\r\n                    </Button>\r\n                    <Button color='grey' onClick={this.handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateProfileModal;"]},"metadata":{},"sourceType":"module"}