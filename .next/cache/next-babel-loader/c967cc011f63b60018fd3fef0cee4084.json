{"ast":null,"code":"var _jsxFileName = \"D:\\\\BlockChat\\\\BlockChat\\\\views\\\\modals\\\\ErrorModal.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { Modal, Header, Button, Message } from 'semantic-ui-react';\nimport appDispatcher from '../../core/AppDispatcher';\nimport Constant from '../../support/Constant';\n\nclass ErrorModal extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      modalOpen: false,\n      message: \"\",\n      title: \"\"\n    });\n\n    _defineProperty(this, \"handleClose\", e => {\n      e.preventDefault();\n      this.setState({\n        modalOpen: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    appDispatcher.register(payload => {\n      if (payload.action == Constant.EVENT.ENCOUNTERED_ERROR) {\n        this.setState({\n          modalOpen: true,\n          message: payload.message,\n          title: payload.title\n        });\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Modal, {\n      open: this.state.modalOpen,\n      onClose: this.handleClose,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, __jsx(Header, {\n      icon: \"\",\n      content: this.state.title ? this.state.title : \"Notice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), __jsx(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(Message, {\n      error: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.state.message)), __jsx(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(Button, {\n      color: \"grey\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Close\")));\n  }\n\n}\n\nexport default ErrorModal;","map":{"version":3,"sources":["D:/BlockChat/BlockChat/views/modals/ErrorModal.js"],"names":["Component","Modal","Header","Button","Message","appDispatcher","Constant","ErrorModal","modalOpen","message","title","e","preventDefault","setState","componentDidMount","register","payload","action","EVENT","ENCOUNTERED_ERROR","render","state","handleClose"],"mappings":";;;;;;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SACIC,KADJ,EAEIC,MAFJ,EAGIC,MAHJ,EAIIC,OAJJ,QAKO,mBALP;AAMA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AAAA;AAAA;;AAAA,mCACvB;AAAEQ,MAAAA,SAAS,EAAE,KAAb;AAAoBC,MAAAA,OAAO,EAAE,EAA7B;AAAiCC,MAAAA,KAAK,EAAE;AAAxC,KADuB;;AAAA,yCAGhBC,CAAD,IAAO;AACjBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AAAEL,QAAAA,SAAS,EAAE;AAAb,OAAd;AACH,KAN8B;AAAA;;AAQ/BM,EAAAA,iBAAiB,GAAG;AAChBT,IAAAA,aAAa,CAACU,QAAd,CAAwBC,OAAD,IAAa;AAChC,UAAIA,OAAO,CAACC,MAAR,IAAkBX,QAAQ,CAACY,KAAT,CAAeC,iBAArC,EAAwD;AACpD,aAAKN,QAAL,CAAc;AAACL,UAAAA,SAAS,EAAE,IAAZ;AAAkBC,UAAAA,OAAO,EAAEO,OAAO,CAACP,OAAnC;AAA4CC,UAAAA,KAAK,EAAEM,OAAO,CAACN;AAA3D,SAAd;AACH;AACJ,KAJD;AAKH;;AAEDU,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,KAAD;AACI,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWb,SADrB;AAEI,MAAA,OAAO,EAAE,KAAKc,WAFlB;AAGI,MAAA,IAAI,EAAC,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,EAAb;AAAgB,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWX,KAAX,GAAmB,KAAKW,KAAL,CAAWX,KAA9B,GAAsC,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMQ,MAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgB,KAAKW,KAAL,CAAWZ,OAA3B,CADJ,CANR,EASQ,MAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,OAAO,EAAE,KAAKa,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,CATR,CADJ;AAiBH;;AAlC8B;;AAqCnC,eAAef,UAAf","sourcesContent":["import {Component} from 'react';\r\nimport {\r\n    Modal,\r\n    Header,\r\n    Button,\r\n    Message\r\n} from 'semantic-ui-react';\r\nimport appDispatcher from '../../core/AppDispatcher';\r\nimport Constant from '../../support/Constant';\r\n\r\nclass ErrorModal extends Component {\r\n    state = { modalOpen: false, message: \"\", title: \"\"}\r\n\r\n    handleClose = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ modalOpen: false })\r\n    };\r\n\r\n    componentDidMount() {\r\n        appDispatcher.register((payload) => {\r\n            if (payload.action == Constant.EVENT.ENCOUNTERED_ERROR) {\r\n                this.setState({modalOpen: true, message: payload.message, title: payload.title});\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                open={this.state.modalOpen}\r\n                onClose={this.handleClose}\r\n                size='small'\r\n                >\r\n                <Header icon=\"\" content={this.state.title ? this.state.title : \"Notice\"} />\r\n                    <Modal.Content>\r\n                        <Message error>{this.state.message}</Message>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                    <Button color='grey' onClick={this.handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorModal;"]},"metadata":{},"sourceType":"module"}